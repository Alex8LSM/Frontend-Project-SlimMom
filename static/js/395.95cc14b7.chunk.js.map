{"version":3,"file":"static/js/395.95cc14b7.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Modal/ModalContent/ModalContent.jsx","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.styled.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.js","pages/MainPage/MainPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport BgTablet from '../../images/BackgroundTablet.webp';\nimport BgDesk from '../../images/BackgroundDesc.webp';\n\nexport const ResponsiveContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    // height: 100vh;\n    padding: 20px 20px;\n    // background-image: url(${BgTablet});\n\n    background-position: bottom left;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    // height: 100vh;\n    // width: 1280px;\n    // background-image: url(${BgDesk});\n    background-position: bottom right;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveContainer } from './Container.styled';\n\nexport default function Container({children}){\nreturn <ResponsiveContainer>\n          {children}\n      </ResponsiveContainer>\n}\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\n\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\n\nconst { mainBackground, activeButton, placeholderColor, formBorderColor } =\n  layoutStyles;\n\nconst PlaceholderContainer = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n\n  @media screen and (min-device-width: 768px) {\n    margin-right: 30px;\n\n    &:nth-child(4) {\n      margin-right: 0px;\n    }\n\n    &:nth-child(3) {\n      margin-bottom: 0px;\n    }\n  }\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  color: #212121;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 768px) {\n    font-size: 18px;\n    line-height: 1.44;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-device-width: 768px) {\n    font-size: 34px;\n    line-height: 41px;\n    margin-bottom: 80px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${placeholderColor};\n  font-family: 'Raleway', sans-serif;\n  pointer-events: none;\n  position: absolute;\n  transition: all 200ms;\n  top: 0px;\n  left: 0px;\n  background-color: transparent;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid ${formBorderColor};\n  padding:0px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n   color: ${placeholderColor};\n  padding-bottom:8px;\n  width:240px;\n  background:transparent;\n  }\n  \n    &:hover,&:focus  {  \n    color:  ${activeButton};\n    border-bottom: 1px solid ${activeButton};\n  }\n  \n \n\n&::-webkit-outer-spin-button,\n&::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n \n[type=number] {\n  -moz-appearance:textfield;\n}\n\n &:focus + ${Label},&:not(:placeholder-shown) + ${Label} { top: -22px;\n    left: -10px;\n    font-size: 11px;\n    background:transparent;\n    padding:  10px;}\n\n`;\n\nconst Form = styled.form`\n  margin-bottom: 40px;\n  @media screen and (min-device-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    height: 160px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst BloodTypeTitle = styled.div`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  padding-bottom: 10px;\n\n  max-width: 240px;\n  @media screen and (min-device-width: 768px) {\n    border-bottom: 1px solid #ccc;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BloodTypeRadioContainer = styled.div`\n  width: 240px;\n  min-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst BloodTypeLabel = styled.label`\n  position: relative;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  margin-left: 20px;\n`;\n\nconst BloodTypeCheckBox = styled.span`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  top: 0;\n  background: ${mainBackground};\n  border: 1px solid ${formBorderColor};\n  margin-left: -20px;\n`;\n\nconst Text = styled.span`\n   color: ${placeholderColor};\n  margin-left 8px;\n`;\n\nconst BloodTypeRadioBtn = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  z-index: -1;\n\n  &:hover,&:focus ~ ${BloodTypeCheckBox} {\n    cursor:pointer;\n    background: fff;}\n\n&: checked ~ ${Text}{color: ${activeButton};}\n\n &: checked ~ ${BloodTypeCheckBox}  {\n    background: fff;\n    &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    content: '';\n    border-radius: 50%;\n    border-color: transparent;\n    width: 10px;\n    height: 10px;\n    background: ${activeButton};}\n\n    \n`;\n\nconst StileWrapper = styled.div``;\n\nconst StileButtonWrapper = styled.div``;\n\nconst ErrorWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  font-size: 11px;\n  color: red;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: none;\n  background-color: ${activeButton};\n  width: 210px;\n  min-height: 43px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  color: #fff;\n\n  @media screen and (min-device-width: 768px) {\n    margin: 0;\n  }\n  @media screen and (min-device-width: 1280px) {\n    margin-right: 0;\n  }\n`;\n\nexport {\n  Form,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  StileWrapper,\n  Text,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n  Btn,\n};\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { MdClose } from 'react-icons/md';\n\nconst { transparentGrey, mainBackground, modalWrapperColor, verdanaBold } =\n  layoutStyles;\n\nexport const Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: scroll;\n  background: ${transparentGrey};\n`;\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 672px;\n  min-height: 573px;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  background: ${mainBackground};\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    top: 65%;\n    left: 50%;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: ${verdanaBold};\n  padding: 64px 81px 81px 81px;\n  text-align: center;\n  font-family: 'Verdana';\n  margin: auto;\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    padding: 40px 20px 120px 20px;\n  }\n`;\n\nexport const CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  z-index: 10;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;","import React, { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Background, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ setShowModal, showModal, children }) => {\n  const closeModal = e => {\n    if (e.target === e.currentTurget) {\n      setShowModal();\n    }\n  };\n\n  const closeOnEscapeKey = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        setShowModal();\n      }\n    },\n    [setShowModal]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeOnEscapeKey);\n\n    return () => window.removeEventListener('keydown', closeOnEscapeKey);\n  }, [closeOnEscapeKey]);\n\n  return createPortal(\n    <>\n        <Background onClick={closeModal}>\n          <ModalWrapper showModal={showModal}>{children}</ModalWrapper>\n        </Background>\n\n    </>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import Button from '../../button/Button.styled';\n// import {FoodRecWrap} from '../../SummaryForDay/SummaryforDay.styled';\n// import Title from '../../DailyCalorieIntake/Title.styled';\nimport { Content, CloseModalButton } from '../Modal.styled';\nimport {\n  Btn,\n  StileButtonWrapper,\n} from '../../Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled';\n\nexport const ModalContent = ({ onClose, setShowModal }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div>\n      <Content>\n        <h2>Ваша рекомендована добова норма споживання калорій становить</h2>\n        {/* <FoodRecWrap/> */}\n        <StileButtonWrapper>\n          <Btn centered={'true'}\n            onClick={() => navigate('/signup')}>\n            Почніть худнути\n          </Btn>\n        </StileButtonWrapper>\n      </Content>\n      <CloseModalButton\n        aria-label=\"Close modal\"\n        onClick={() => {\n          setShowModal(prev => !prev);\n        }}\n      />\n    </div>\n  );\n};\n\nModalContent.propTypes = {\n  onClose: PropTypes.func,\n};","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Btn,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  Text,\n  StileWrapper,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n} from './CalculatorСalorieForm.styled';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport calcOperation from '../../../redux/calculatorSlice/calcOperation';\nimport { Modal } from '../../Modal';\nimport React, { useState } from 'react';\n\nconst CalculatorSchema = Yup.object().shape({\n  height: Yup.number('number')\n    .min(100, 'Мінімальний зріст 100 см')\n    .max(250, 'Максимальний зріст 250 см')\n    .required('Обов`язково до заповнення'),\n  age: Yup.number()\n    .min(18, 'Мінімальний вік 18 років')\n    .max(100, 'Максимальний вік 100 років ')\n    .required('Обов`язково до заповнення'),\n  currentWeight: Yup.number()\n    .moreThan(\n      Yup.ref('desiredWeight'),\n      'Поточна вага має бути більшою за бажану'\n    )\n    // .min(30, 'Мінімальна вага 30 кг')\n    .max(120, 'Максимальна вага 120 кг')\n    .required('Обов`язково до заповнення'),\n  desiredWeight: Yup.number()\n    .min(20, 'Мінімальна вага 20 кг')\n    .max(500, 'Максимальна вага 500 кг')\n    .required('Обов`язково до заповнення'),\n  bloodType: Yup.string().required(),\n});\n\nconst CalculatorСalorieForm = () => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  return (\n    <StileWrapper>\n      <Header>Розрахуйте свою денну норму калорій прямо зараз</Header>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '1',\n        }}\n        validationSchema={CalculatorSchema}\n        onSubmit={(values, actions) => {\n          dispatch(calcOperation.calc(values));\n          setShowModal(true);\n          setTimeout(async () => {\n            alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n            // actions.resetForm();\n          }, 1000);\n\n        }}\n      >\n        {props => {\n          const { values, handleSubmit, handleChange } = props;\n          const { height, age, currentWeight, desiredWeight } = values;\n\n          const settings = [\n            {\n              name: 'height',\n              type: 'number',\n              label: 'Зріст*',\n              value: height,\n            },\n            {\n              name: 'age',\n              type: 'number',\n              label: 'Вік*',\n              value: age,\n            },\n            {\n              name: 'currentWeight',\n              type: 'number',\n              label: 'Поточна вага*',\n              value: currentWeight,\n            },\n            {\n              name: 'desiredWeight',\n              type: 'number',\n              label: 'Бажана вага*',\n              value: desiredWeight,\n            },\n          ];\n\n          const bloodSettings = [\n            { id: 'bloodType1', value: '1' },\n            { id: 'bloodType2', value: '2' },\n            { id: 'bloodType3', value: '3' },\n            { id: 'bloodType4', value: '4' },\n          ];\n\n          return (\n            <>\n              <Form id=\"calculatorForm\" onSubmit={handleSubmit}>\n                {settings.map(({ name, type, label, value }) => {\n                  return (\n                    <PlaceholderContainer key={name}>\n                      <Input\n                        id={name}\n                        name={name}\n                        type={type}\n                        onChange={handleChange}\n                        value={value}\n                        placeholder=\" \"\n                      />\n\n                      <Label htmlFor={label}>{label}</Label>\n                      <ErrorMessage\n                        className=\"menu navigation-menu\"\n                        component={ErrorWrapper}\n                        name={name}\n                      />\n                    </PlaceholderContainer>\n                  );\n                })}\n\n                <BloodTypeTitle>Група крові*</BloodTypeTitle>\n                <BloodTypeRadioContainer>\n                  {bloodSettings.map(({ id, value }) => {\n                    return (\n                      <BloodTypeLabel key={id}>\n                        <BloodTypeRadioBtn\n                          checked={values.bloodType === value}\n                          type=\"radio\"\n                          id={id}\n                          name=\"bloodType\"\n                          onChange={handleChange}\n                          value={value}\n                        />\n                        <BloodTypeCheckBox></BloodTypeCheckBox>\n                        <Text>{value}</Text>\n                      </BloodTypeLabel>\n                    );\n                  })}\n                </BloodTypeRadioContainer>\n              </Form>\n              <StileButtonWrapper>\n                <Btn form=\"calculatorForm\" type=\"submit\">\n                  Почніть худнути\n                </Btn>\n              </StileButtonWrapper>\n            </>\n          );\n        }}\n      </Formik>\n      <Modal showModal={showModal} />\n    </StileWrapper>\n  );\n};\n\nexport default CalculatorСalorieForm;\n","import styled from 'styled-components';\n\nexport const CalculatorWrapperStyle = styled.div`{\n  \n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 767px) {\n  display: flex;\n  justify-content: center;\n    max-width: 320px;\n    padding-top:32px;\n  \n  }\n\n  @media screen and (min-device-width: 768px)  {\n     max-width:510px;\n    padding-top: 100px;\n      margin-left: 0px;\n  }\n\n   @media screen and (min-device-width: 1280px) {\n     padding-top: 140px;\n     max-width:510px;\n     margin-left: 0px;\n\n  }\n`;\n","import CalculatorСalorieForm from '../CalculatorСalorieForm';\nimport { CalculatorWrapperStyle } from './CalculatorWrapper.styled';\n\nexport default function CalculatorWrapper() {\n  return (\n    <CalculatorWrapperStyle>\n      <CalculatorСalorieForm />\n    </CalculatorWrapperStyle>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../../components/Container';\nimport CalculatorFormWrapper from '../../components/Forms/CalculatorFormWrapper';\nimport { Modal } from '../../components/Modal';\nimport { ModalContent } from '../../components/Modal/ModalContent';\n\nexport default function MainPage() {\n\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n  if (showModal) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'unset';\n  }\n\n  return (\n    <Container>\n      <CalculatorFormWrapper openModal={openModal}/>\n      <Modal showModal={showModal} setShowModal={setShowModal}>\n        <ModalContent setShowModal={setShowModal} />\n      </Modal>\n    </Container>\n  );\n}\n\n\nMainPage.propTypes = {\n  showModal: PropTypes.bool,\n  toggleModal: PropTypes.func,\n};"],"names":["ResponsiveContainer","styled","BgTablet","BgDesk","Container","children","mainBackground","layoutStyles","activeButton","placeholderColor","formBorderColor","PlaceholderContainer","Header","Label","Input","Form","BloodTypeTitle","BloodTypeRadioContainer","BloodTypeLabel","BloodTypeCheckBox","Text","BloodTypeRadioBtn","StileWrapper","StileButtonWrapper","ErrorWrapper","Btn","transparentGrey","modalWrapperColor","verdanaBold","Background","ModalWrapper","Content","CloseModalButton","MdClose","modalRoot","document","querySelector","Modal","setShowModal","showModal","closeOnEscapeKey","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTurget","ModalContent","onClose","navigate","useNavigate","centered","prev","CalculatorSchema","Yup","shape","height","min","max","required","age","currentWeight","moreThan","desiredWeight","bloodType","dispatch","useDispatch","useState","initialValues","validationSchema","onSubmit","values","actions","calcOperation","setTimeout","alert","JSON","stringify","setSubmitting","props","handleSubmit","handleChange","settings","name","type","label","value","id","map","onChange","placeholder","htmlFor","className","component","checked","form","CalculatorWrapperStyle","CalculatorWrapper","MainPage","body","style","overflow","openModal"],"sourceRoot":""}