{"version":3,"file":"static/js/176.c8b49972.chunk.js","mappings":"uUAGMA,EAAMC,EAAAA,GAAAA,OAAH,4VACG,qBAAGC,QAAuB,aACzB,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAGpB,SAAAD,GAAK,OAAIA,EAAME,cAAgB,SAEjC,SAAAF,GAAK,OAAIA,EAAMG,YAAN,uBAAoCC,EAAAA,EAAAA,iBACxC,SAAAJ,GAAK,OAAIA,EAAMG,YAAcC,EAAAA,EAAAA,gBACpC,SAAAJ,GAAK,OAAIA,EAAMK,OAAS,UAEvB,SAAAL,GAAK,OAAIA,EAAMM,QAAU,UAC7B,SAAAN,GAAK,OAAIA,EAAMO,QAAU,UAGb,SAAAP,GAAK,OAAIA,EAAMQ,iBAAmB,UAC7C,SAAAR,GAAK,OAAIA,EAAMS,MAAQ,UAOpC,EAJe,SAAAT,GACb,OAAO,SAACH,GAAD,UAASG,K,wCCRH,SAASU,IACtB,OAA0BC,EAAAA,EAAAA,UAASC,GAAAA,CAAO,IAAIC,OAA9C,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACMC,EAAUN,GAAAA,CAAO,IAAIC,MACrBM,EAAUP,GAAAA,CAAO,cAEjBQ,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAWC,EAAWV,OAC9B,CAACA,EAAOM,IAEX,IAAMK,EAAU,SAAAC,GACdN,GAASO,EAAAA,EAAAA,IAAQD,KAGnB,SAASF,EAAWE,GAClB,MAAM,GAAN,OAAUA,EAAKE,OAAO,cAAtB,KAGFH,EAAQD,EAAWV,KACnBS,EAAAA,EAAAA,IAAWC,EAAWV,IAEtB,IAAMe,EAAM/B,EAAAA,GAAAA,IAAH,+EAMHgC,GAA0BC,EAAAA,EAAAA,IAAH,qhBAQd3B,EAAAA,EAAAA,QASKA,EAAAA,EAAAA,aAGOA,EAAAA,EAAAA,aAEGA,EAAAA,EAAAA,QAS9B,OACE,UAACyB,EAAD,YACE,SAAC,IAAD,CACEG,UAAU,eACVR,WAAW,aACXV,MAAOA,EACPmB,YAAY,EACZC,eAAa,EACbC,KAAMnB,EACNoB,SAAU,SAAAC,GACJA,EAAWnB,IACbmB,EAAWnB,GAETmB,EAAWlB,IACbkB,EAAWlB,GAEbJ,EAASsB,GACTpB,GAAgB,GAChBQ,EAAQD,EAAWa,QAGvB,SAACP,EAAD,KACA,SAAC,EAAD,CACEQ,QAAS,WACP,GAAItB,EACF,OAAOC,GAAgB,GAEzBA,GAAgB,IAElBd,WAAYC,EAAAA,EAAAA,eACZmC,UAAW,OACXlC,MAAO,OACPC,OAAQ,OACRC,OAAQ,IAXV,UAaE,SAAC,MAAD,CACEF,MAAM,KACNC,OAAO,KACPG,KAAML,EAAAA,EAAAA,wB,0BC9GHoC,GAAYT,EAAAA,EAAAA,IAAH,+4CAMA3B,EAAAA,EAAAA,eAIAA,EAAAA,EAAAA,cASLA,EAAAA,EAAAA,QAWAA,EAAAA,EAAAA,QAWYA,EAAAA,EAAAA,gBAKAA,EAAAA,EAAAA,gBAMAA,EAAAA,EAAAA,gBAKGA,EAAAA,EAAAA,OAkBAA,EAAAA,EAAAA,S,SCpEjB,SAASqC,IACtB,IAAMrB,GAAWC,EAAAA,EAAAA,MAKXK,GAAOgB,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IAE7B,OACE,iCACE,gBAAKb,UAAU,UAAf,SACsB,IAAnBY,EAASE,QACV,cAAGd,UAAU,OAAb,0UACA,kBAAOA,UAAU,QAAjB,UACE,2BACGY,EAASG,KAAI,SAAAC,GACZ,OACE,2BACE,eAAIhB,UAAU,UAAd,SAAyBgB,EAAIC,MAAMC,MACnC,gBAAIlB,UAAU,YAAd,UAA2BgB,EAAIG,OAA/B,oBACA,gBAAInB,UAAU,cAAd,UACGoB,KAAKC,MAAML,EAAIM,UADlB,gCAGA,yBACE,SAAC,EAAD,CACEnD,WAAYC,EAAAA,EAAAA,eACZC,MAAM,OACNC,OAAO,OACPE,gBAAiBJ,EAAAA,EAAAA,gBACjBkC,QAAS,YA3BP,SAACZ,EAAM6B,GAC3BnC,GAASoC,EAAAA,EAAAA,IAAc,CAAEC,WAAY/B,EAAM6B,GAAIA,KA2B3BG,CAAchC,EAAMsB,EAAIO,IACxBI,EAAAA,GAAAA,QAAA,sDAPJ,UAUE,SAAC,MAAD,CACEtD,MAAM,KACNC,OAAO,KACPsD,MAAOxD,EAAAA,EAAAA,yBApBN4C,EAAIO,cA8BvB,SAACf,EAAD,O,gECtDAqB,GAAYC,E,QAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,wBAAyB,CACvBJ,MAAOxD,EAAAA,EAAAA,iBACP6D,WAAY7D,EAAAA,EAAAA,QACZ8D,WAAY,IACZC,SAAU,OACVC,WAAY,KACZC,cAAe,UAEjB,qCAAsC,CACpCC,OAAQ,OACRC,UAAW,MACXC,QAAS,EACTP,WAAY7D,EAAAA,EAAAA,QACZ8D,WAAY,IACZC,SAAU,OACVC,WAAY,KACZC,cAAe,UAEjB,4BAA6B,CAC3BE,UAAW,QACXN,WAAY7D,EAAAA,EAAAA,QACZ8D,WAAY,IACZC,SAAU,OACVC,WAAY,KACZC,cAAe,SACfI,aAAc,MACdC,YAAa,OAEf,4CAA6C,CAC3Cd,MAAOxD,EAAAA,EAAAA,eAGXuE,UAAW,CACT,2BAA4B,CAC1BV,WAAY7D,EAAAA,EAAAA,QACZ8D,WAAY,IACZC,SAAU,QAEZ,kCAAmC,CACjClE,QAAS,QAEX,sCAAuC,CACrC2E,SAAU,cAKVC,GAAsB9C,EAAAA,EAAAA,IAAH,23BAEnB,SAAA/B,GAAK,OAAI8E,QAAQC,IAAI/E,KAIHI,EAAAA,EAAAA,eAIAA,EAAAA,EAAAA,eAYbA,EAAAA,EAAAA,eAEuBA,EAAAA,EAAAA,OAqBFA,EAAAA,EAAAA,SC9EjB,SAAS4E,EAAYC,GAClC,OAA0BtE,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOuE,EAAP,KAAkBC,EAAlB,KACA,GAAmCxE,EAAAA,EAAAA,UAAS,IAA5C,eAAOyE,EAAP,KAAsBC,EAAtB,KAEMjE,GAAWC,EAAAA,EAAAA,MAEXuB,GAAWF,EAAAA,EAAAA,IAAY4C,EAAAA,IACvB5D,GAAOgB,EAAAA,EAAAA,IAAYC,EAAAA,IAMnB4C,EAAuBC,GAAAA,EAJT,SAAA1E,GAClBM,GAASqE,EAAAA,EAAAA,IAAc3E,MAG0B,KAkBnD,IAAM4E,GAAWC,EAAAA,EAAAA,eAAc,CAC7BC,MAAM,eAAD,OAAiBxF,EAAAA,EAAAA,OAAjB,OAGDyF,EAAUhC,IAEhB,OACE,iBAAK7B,UAAW,UAAhB,WACE,SAAC,KAAD,CACE8D,cAAe,CAAEC,QAAS,GAAI5C,OAAQ,IADxC,UASE,UAAC,KAAD,CAAMnB,UAAW,cAAjB,WACE,gBAAKA,UAAW,cAAhB,UACE,SAACgE,EAAA,EAAD,CACEC,eAAa,EACbC,YAAU,EACVC,eAAa,EACb5C,GAAG,sBACH6C,QAASxD,EACT9B,MAAOA,EACPuF,cAAe,0IACfR,QAASA,EACTzD,SAAU,SAACkE,EAAGC,GACRA,EAAEhD,KACJ4B,EAAaoB,EAAEhD,IACfxC,EAASwF,KAGbC,GAAI,CACFC,aAAa,aAAD,OAAerG,EAAAA,EAAAA,iBAC3BC,MAAOqF,EAAW,QAAU,SAE9BgB,YAAa,SAAAC,GAAM,OACjB,SAACC,EAAA,GAAD,kBACMD,GADN,IAEEE,WAAS,EACTC,UAAQ,EACR1E,SAAU,SAAA2E,GACsB,KAA1BA,EAAEC,cAAclG,OAClByE,EAAqBwB,EAAEC,cAAclG,QAEzCmG,MAAM,sIAKd,gBAAKjF,UAAW,gBAAhB,UACE,SAAC4E,EAAA,EAAD,CACEE,UAAQ,EACRD,WAAS,EACTtD,GAAG,SACH2D,KAAK,SACLC,QAAS,SAAAJ,GACPA,EAAEK,OAAOtG,MAAQsC,KAAKiE,IAAI,EAAGC,SAASP,EAAEK,OAAOtG,QAC5CyG,WACAC,MAAM,EAAG,IAEdhB,GAAI,CACFC,aAAa,aAAD,OAAerG,EAAAA,EAAAA,iBAC3BC,MAAOqF,EAAW,QAAU,QAC5BjB,aAAc,OACdlE,OAAQmF,GAAY,cAEtBtD,SAAU,SAAA2E,GACJA,EAAEC,cAAclG,MAAQ,GAC1BuE,EAAU0B,EAAEC,cAAclG,QAG9B+E,QAASA,EACToB,MAAM,iFAIV,SAAC,EAAD,CACE1G,OAAO,WACP2G,KAAK,SACLhH,aAAcwF,GAAY,OAC1BpD,QAAS,WAlGC,KAAd4C,EACKvB,EAAAA,GAAAA,QAAc,gGAEnByB,GAAiB,EACZzB,EAAAA,GAAAA,QAAc,yHAGL,KAAduB,GAAoBE,GAAiB,IACvChE,GAASqG,EAAAA,EAAAA,IAAW,CAAE/F,KAAAA,EAAMwD,UAAAA,EAAWE,cAAAA,KACvCzB,EAAAA,GAAAA,QAAA,0CACAwB,EAAa,IACbE,EAAU,IACVtE,EAAS,KAwFG2E,GAA0B,KAAdR,GAAoBE,GAAiB,GACnDhE,GAASsG,EAAAA,EAAAA,KAAa,KAP5B,SAWGhC,GACC,cAAG1D,UAAW,UAAd,mDAEA,SAAC,MAAD,CACE3B,MAAM,KACNC,OAAO,KACPG,KAAML,EAAAA,EAAAA,yBAOhB,SAACyE,EAAD,CAAqBI,QAAM,OC1JjC,MAA0B,2BAA1B,EAAmE,+BCapD,SAAS0C,IACtB,IAAMvG,GAAWC,EAAAA,EAAAA,MACXuG,GAASlF,EAAAA,EAAAA,IAAYmF,EAAAA,IAErBnC,GAAWC,EAAAA,EAAAA,eAAc,CAC7BC,MAAM,eAAD,OAAiBxF,EAAAA,EAAAA,OAAjB,OAGP,OACE,SAAC0H,EAAA,MAAD,WACE,iBAAK9F,UAAWiD,EAAhB,WACE,gBAAKjD,UAAWiD,EAAhB,UACE,SAACvE,EAAD,MAEDgF,GAAYkC,GACX,SAAC5C,EAAD,KAEA,SAACA,EAAD,CAAa/E,QAAS,UAGxB,SAACwC,EAAD,IAECiD,IACC,SAAC,EAAD,CACEpD,QAAS,WACPlB,GAASsG,EAAAA,EAAAA,KAAa,KAExBnH,OAAQ,cAJV,UAME,SAAC,MAAD,CAAQF,MAAM,KAAKC,OAAO,KAAKG,KAAML,EAAAA,EAAAA,0B,6HC3C1C,IACMkF,EAAc,SAACyC,GAAD,OAAWA,EAAMC,MAAMC,aACrCtF,EAAU,SAACoF,GAAD,OAAWA,EAAMC,MAAME,UACjCL,EAAY,SAACE,GAAD,OAAWA,EAAMC,MAAMJ,QAGnC/E,EAAiB,SAACkF,GAAD,OAAWA,EAAMC,MAAMpF","sources":["components/button/Button.styled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm/ProductForm.styled.js","components/Forms/ProductForm/ProductForm.jsx","webpack://Frontend-Project-SlimMom/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.js","redux/dairy/dairySelector.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  box-shadow:  ${props => props.background || `0px 4px 10px ${layoutStyles.activeButton}`};\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nimport { fetchDairy } from '../../redux/dairy/dairyOperations';\nimport { addDate } from '../../redux/dairy/dairyReducer';\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(moment(new Date()));\n  const [openCalendar, setOpenCalendar] = useState(false);\n  const maxDate = moment(new Date());\n  const minDate = moment('1922-01-01');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchDairy(dateFormat(value)));\n  }, [value, dispatch]);\n\n  const setDate = date => {\n    dispatch(addDate(date));\n  };\n\n  function dateFormat(date) {\n    return `${date.format('YYYY.MM.DD')}Z`;\n  }\n\n  setDate(dateFormat(value));\n  fetchDairy(dateFormat(value));\n\n  const Div = styled.div`\n    display: flex;\n    margin: 0;\n    padding: 0;\n  `;\n\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n  font-family: ${layoutStyles.verdana};\nletter-spacing: 0.04em;\ntable{\n  font-size: 16px;\n  font-weight: 400;\n}\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n\n`;\n\n  return (\n    <Div>\n      <Datetime\n        className=\"form-control\"\n        dateFormat=\"DD.MM.yyyy\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={newValue => {\n          if (newValue > maxDate) {\n            newValue = maxDate;\n          }\n          if (newValue < minDate) {\n            newValue = minDate;\n          }\n          setValue(newValue);\n          setOpenCalendar(false);\n          setDate(dateFormat(newValue));\n        }}\n      />\n      <DatePickerWrapperStyles />\n      <Button\n        onClick={() => {\n          if (openCalendar) {\n            return setOpenCalendar(false);\n          }\n          setOpenCalendar(true);\n        }}\n        background={layoutStyles.mainBackground}\n        boxShadow={'none'}\n        width={'23px'}\n        height={'23px'}\n        margin={'0'}\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.info{\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  padding: 60px;\n  line-height: 2em;\n  letter-spacing: 0.04em;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  line-height: 1.22;\n  letter-spacing: 0.04em;\n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Button from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport { DivStyles } from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { getEatProducts, getDate } from '../../redux/dairy/dairySelector';\n\nimport { removeProduct } from '../../redux/dairy/dairyOperations';\n\nexport default function ProductsList() {\n  const dispatch = useDispatch();\n\n  const deleteProduct = (date, id) => {\n    dispatch(removeProduct({ dataFormat: date, id: id }));\n  };\n  const date = useSelector(getDate);\n  const products = useSelector(getEatProducts);\n\n  return (\n    <>\n      <div className=\"control\">\n        {products.length ===0 ?\n        <p className=\"info\">Тут буде список продуктів та напоїв, що з'їли та випили за день. </p> :\n        <table className=\"table\">\n          <tbody>\n            {products.map(row => {\n              return (\n                <tr key={row.id}>\n                  <td className=\"td-name\">{row.title.ua}</td>\n                  <td className=\"td-weight\">{row.weight} гр</td>\n                  <td className=\"td-calories\">\n                    {Math.round(row.calories)} ккал\n                  </td>\n                  <td>\n                    <Button\n                      background={layoutStyles.mainBackground}\n                      width=\"28px\"\n                      height=\"28px\"\n                      backgroundHover={layoutStyles.formBorderColor}\n                      onClick={() => {\n                        deleteProduct(date, row.id);\n                        toast.success(`Видалено!`) // не обрабатывается ошибка\n                      }}\n                    >\n                      <FiX\n                        width=\"14\"\n                        height=\"14\"\n                        color={layoutStyles.placeholderColor}\n                      />\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>}\n      </div>\n      <DivStyles />\n    </>\n  );\n}\n","import { layoutStyles } from '../../../stlyles/layoutStyles';\nimport { createGlobalStyle } from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-root': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-input': {\n      textAlign: 'right',\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n      paddingRight: '2px',\n      paddingLeft: '2px',\n    },\n    '& .MuiFormLabel-colorPrimary.Mui-focused ': {\n      color: layoutStyles.activeButton,\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-input': {\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nconst FormikWrapperStyles = createGlobalStyle`\n  .wrapper{\n    ${props => console.log(props)}\n    position: absolute;\n    top: 0;\n    padding-top: 80px;\n    background-color: ${layoutStyles.mainBackground};\n  }\n   .ProductForm {\n    padding-top: 80px;\n    background-color: ${layoutStyles.mainBackground};\n    display: block;\n    margin: 0px;\n    outline: none;\n    padding: 0 20px;\n    height: 100vh;\n}\n.ProductName {\n  margin:  0 32px 20px 0;\n}\n.BtnName{\n  width: 176px;\n  color: ${layoutStyles.mainBackground}\n}\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    .wrapper{\n    position: relative;\n    display: block;\n    padding: 0;\n  }\n .ProductForm {\n  display: flex;\n  margin:  0 0 60px 0;\n  padding: 0;\n  outline: none;\n  width: 240px;\n  height: 100%;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin: 0 32px 0 0;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n\n`;\n\nexport {FormikWrapperStyles, useStyles}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\nimport debounce from 'lodash.debounce';\nimport { toast } from 'react-toastify';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\nimport Button from '../../button/Button.styled';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../../redux/dairy/dairyReducer';\nimport {\n  fetchProducts,\n  addProduct,\n} from '../../../redux/dairy/dairyOperations';\nimport { getProducts, getDate } from '../../../redux/dairy/dairySelector';\nimport { FormikWrapperStyles, useStyles } from './ProductForm.styled';\n\nexport default function ProductForm(styles) {\n  const [value, setValue] = useState('');\n  const [productId, setProductId] = useState('');\n  const [productWeight, setWeight] = useState('');\n\n  const dispatch = useDispatch();\n\n  const products = useSelector(getProducts); // список найденных продуктов\n  const date = useSelector(getDate); // форматированная дата на которую добавляем проукт\n\n  const findProduct = value => {\n    dispatch(fetchProducts(value));\n  };\n\n  const debouncedFindProduct = debounce(findProduct, 400);\n\n  function onSubmit() {\n    if (productId === '') {\n      return toast.warning('Виберіть продукт!');\n    }\n    if (productWeight <= 0) {\n      return toast.warning('Вкажіть вагу продукту!');\n    }\n\n    if (productId !== '' && productWeight >= 1) {\n      dispatch(addProduct({ date, productId, productWeight }));\n      toast.success(`З'їдено!`);\n      setProductId('');\n      setWeight('');\n      setValue('');\n    }\n  }\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className={'wrapper'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        // onSubmit={(values, actions) => {\n        //   setTimeout(() => {\n        //     actions.setSubmitting(false);\n        //   }, 1000);\n        // }}\n        // onSubmit={onSubmit}\n      >\n        <Form className={'ProductForm'}>\n          <div className={'ProductName'}>\n            <Autocomplete\n              disablePortal\n              autoSelect\n              selectOnFocus\n              id=\"custom-autocomplete\"\n              options={products}\n              value={value}\n              noOptionsText={'Такий продукт не знайдено'} // якщо продукту не має в списку можливих значень\n              classes={classes}\n              onChange={(_, v) => {\n                if (v.id) {\n                  setProductId(v.id);\n                  setValue(v);\n                }\n              }}\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                width: isMobile ? '280px' : '240px',\n              }}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  required\n                  onChange={e => {\n                    if (e.currentTarget.value !== '')\n                      debouncedFindProduct(e.currentTarget.value);\n                  }}\n                  label=\"Введіть назву продукту\"\n                />\n              )}\n            />\n          </div>\n          <div className={'ProductWeight'}>\n            <TextField\n              required\n              fullWidth\n              id=\"weight\"\n              type=\"number\"\n              onInput={e => {\n                e.target.value = Math.max(0, parseInt(e.target.value))\n                  .toString()\n                  .slice(0, 4);\n              }}\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                width: isMobile ? '280px' : '150px',\n                paddingRight: '50px',\n                margin: isMobile && '0 0 60px 0',\n              }}\n              onChange={e => {\n                if (e.currentTarget.value > 1) {\n                  setWeight(e.currentTarget.value);\n                }\n              }}\n              classes={classes}\n              label=\"Вага продукта\"\n            />\n          </div>\n\n          <Button\n            margin=\"0 auto 0\"\n            type=\"submit\"\n            borderRadius={isMobile && '30px'}\n            onClick={() => {\n              onSubmit();\n              if (isMobile && productId !== '' && productWeight >= 1) {\n                dispatch(changeToggle(false));\n              }\n            }}\n          >\n            {isMobile ? (\n              <p className={'BtnName'}>Додати</p>\n            ) : (\n              <ImPlus\n                width=\"20\"\n                height=\"20\"\n                fill={layoutStyles.mainBackground}\n              />\n            )}\n          </Button>\n        </Form>\n      </Formik>\n\n      <FormikWrapperStyles styles />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"DiaryPage_Wrapper__4CjeL\",\"WrapperDate\":\"DiaryPage_WrapperDate__S3ccC\"};","import { useMediaQuery } from 'react-responsive';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../redux/dairy/dairyReducer';\nimport { getToggle } from '../../redux/dairy/dairySelector';\n\nimport styles from './DiaryPage.module.css';\n\nexport default function DiaryPage() {\n  const dispatch = useDispatch();\n  const toggle = useSelector(getToggle);\n\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <motion.div>\n      <div className={styles.Wrapper}>\n        <div className={styles.WrapperDate}>\n          <DateCalendar />\n        </div>\n        {isMobile && toggle ? (\n          <ProductForm />\n        ) : (\n          <ProductForm display={'none'} />\n        )}\n\n        <ProductsList />\n\n        {isMobile && (\n          <Button\n            onClick={() => {\n              dispatch(changeToggle(true));\n            }}\n            margin={'60px auto 0'}\n          >\n            <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n          </Button>\n        )}\n      </div>\n    </motion.div>\n  );\n}\n","export const getDairy = (state) => state.dairy.daySummary; \nexport const getProducts = (state) => state.dairy.productList; \nexport const getDate = (state) => state.dairy.dateFind;\nexport const getToggle = (state) => state.dairy.toggle;\nexport const getSummary = (state) => state.dairy.summary;\nexport const getNotRecFood = (state) => state.dairy.notRecFood;\nexport const getEatProducts = (state) => state.dairy.products; \n"],"names":["Btn","styled","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","DateCalendar","useState","moment","Date","value","setValue","openCalendar","setOpenCalendar","maxDate","minDate","dispatch","useDispatch","useEffect","fetchDairy","dateFormat","setDate","date","addDate","format","Div","DatePickerWrapperStyles","createGlobalStyle","className","timeFormat","closeOnSelect","open","onChange","newValue","onClick","boxShadow","DivStyles","ProductsList","useSelector","getDate","products","getEatProducts","length","map","row","title","ua","weight","Math","round","calories","id","removeProduct","dataFormat","deleteProduct","toast","color","useStyles","makeStyles","theme","root","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","border","textAlign","padding","paddingRight","paddingLeft","inputRoot","minWidth","FormikWrapperStyles","console","log","ProductForm","styles","productId","setProductId","productWeight","setWeight","getProducts","debouncedFindProduct","debounce","fetchProducts","isMobile","useMediaQuery","query","classes","initialValues","product","Autocomplete","disablePortal","autoSelect","selectOnFocus","options","noOptionsText","_","v","sx","borderBottom","renderInput","params","TextField","fullWidth","required","e","currentTarget","label","type","onInput","target","max","parseInt","toString","slice","addProduct","changeToggle","DiaryPage","toggle","getToggle","motion","state","dairy","productList","dateFind"],"sourceRoot":""}