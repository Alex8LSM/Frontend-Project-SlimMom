{"version":3,"file":"static/js/643.f741c7a4.chunk.js","mappings":"oUASMA,EAAOC,EAAAA,GAAAA,IAAH,8JAC6BC,EAAAA,EAAAA,QAOxB,SAASC,IAGtB,IAAIC,EAAS,GACb,GAA8BC,EAAAA,EAAAA,UAAS,CACrCC,aAAa,EACbC,IAAK,KACLC,KAAM,EACNC,WACE,2EALJ,eAAOC,EAAP,KAAgBC,EAAhB,KAuBMC,EAAe,SAAAC,GACnBT,EAASS,GA2BX,OACE,+BACE,UAACb,EAAD,YACE,UAAC,IAAD,CAAKc,aAAa,OAAlB,WACE,SAAC,IAAD,CAAKC,MAAM,MAAX,UACE,SAAC,IAAD,CACEC,IAAKN,EAAQD,WACbQ,MAAO,CACLF,MAAO,OACPG,OAAQ,OACRC,UAAW,cAIjB,SAAC,IAAD,CACEC,QAAQ,YACRL,MAAM,OACNE,MAAO,CACLI,gBAAiB,UACjBC,MAAO,SALX,UAQE,kBAAOC,KAAK,OAAOC,OAAO,UAAUC,SA/BrB,SAAAC,GACvB,IAAIC,EAAMC,IAAIC,gBAAgBH,EAAEI,OAAOC,MAAM,IAC7CpB,GAAW,kBACND,GADK,IAERH,IAAKoB,EACLrB,aAAa,aA8BVI,EAAQJ,cACP,UAAC,IAAD,CAAK0B,QAAQ,QAAQjB,MAAM,MAA3B,WACE,SAAC,IAAD,CACEkB,IAAKrB,EACLsB,MAAOxB,EAAQH,IACfQ,MAAO,IACPG,OAAQ,IACRiB,OAAQ,GACRb,MAAO,CAAC,IAAK,IAAK,IAAK,IACvBc,OAAQ,EACRC,MAAO3B,EAAQF,QAEjB,SAAC,IAAD,CACE,aAAW,aACX8B,MAAO5B,EAAQF,KACf+B,IAAK,EACLC,IAAK,GACLC,KAAM,GACNhB,SAvFS,SAACiB,EAAOJ,GAC3B3B,GAAW,kBACND,GADK,IAERF,KAAM8B,SAsFA,UAAC,IAAD,YACE,SAAC,IAAD,CAAQlB,QAAQ,YAAYuB,QAnFnB,WACnBhC,GAAW,kBACND,GADK,IAERJ,aAAa,KAEfsC,EAAAA,GAAAA,WA8EU,qBAGA,SAAC,IAAD,CAAQD,QA1ED,SAAAjB,GACjB,GAAId,EAAc,CAChB,IACMH,EADeL,EAAOyC,yBACIC,YAEhCnC,GAAW,kBACND,GADK,IAERH,IAAK,KACLD,aAAa,EACbG,WAAYA,KAEdmC,EAAAA,GAAAA,YA+DQ","sources":["components/Header/Avatar.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport { Avatar, Box, Button, Slider } from '@material-ui/core';\nimport { useState } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\n\n//import authOperations from '../../redux/auth/authOperations';\n//import { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nconst BoxA = styled.div`\n  @media only screen and (min-width: ${layoutStyles.tablet}) {\n    display: flex;\n    justify-content: space-around;\n    align-items: stretch;\n  } ;\n`;\n\nexport default function AvatarUpload() {\n  // const dispatch = useDispatch();\n\n  var editor = '';\n  const [picture, setPicture] = useState({\n    cropperOpen: false,\n    img: null,\n    zoom: 2,\n    croppedImg:\n      'https://upload.wikimedia.org/wikipedia/commons/0/09/Man_Silhouette.png',\n  });\n\n  const handleSlider = (event, value) => {\n    setPicture({\n      ...picture,\n      zoom: value,\n    });\n  };\n\n  const handleCancel = () => {\n    setPicture({\n      ...picture,\n      cropperOpen: false,\n    });\n    toast.dismiss();\n  };\n\n  const setEditorRef = ed => {\n    editor = ed;\n  };\n\n  const handleSave = e => {\n    if (setEditorRef) {\n      const canvasScaled = editor.getImageScaledToCanvas();\n      const croppedImg = canvasScaled.toDataURL();\n\n      setPicture({\n        ...picture,\n        img: null,\n        cropperOpen: false,\n        croppedImg: croppedImg,\n      });\n      toast.dismiss();\n    }\n  };\n\n  const handleFileChange = e => {\n    let url = URL.createObjectURL(e.target.files[0]);\n    setPicture({\n      ...picture,\n      img: url,\n      cropperOpen: true,\n    });\n  };\n\n  return (\n    <>\n      <BoxA>\n        <Box marginBottom=\"10px\">\n          <Box width=\"35%\">\n            <Avatar\n              src={picture.croppedImg}\n              style={{\n                width: '100%',\n                height: 'auto',\n                objectFit: 'cover',\n              }}\n            />\n          </Box>\n          <Button\n            variant=\"contained\"\n            width=\"100%\"\n            style={{\n              backgroundColor: '#FC842D',\n              color: 'white',\n            }}\n          >\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n          </Button>\n        </Box>\n\n        {picture.cropperOpen && (\n          <Box display=\"block\" width=\"50%\">\n            <AvatarEditor\n              ref={setEditorRef}\n              image={picture.img}\n              width={200}\n              height={200}\n              border={50}\n              color={[255, 255, 255, 0.6]}\n              rotate={0}\n              scale={picture.zoom}\n            />\n            <Slider\n              aria-label=\"raceSlider\"\n              value={picture.zoom}\n              min={1}\n              max={10}\n              step={0.1}\n              onChange={handleSlider}\n            ></Slider>\n            <Box>\n              <Button variant=\"contained\" onClick={handleCancel}>\n                Cancel\n              </Button>\n              <Button onClick={handleSave}>Save</Button>\n            </Box>\n          </Box>\n        )}\n      </BoxA>\n    </>\n  );\n}\n"],"names":["BoxA","styled","layoutStyles","AvatarUpload","editor","useState","cropperOpen","img","zoom","croppedImg","picture","setPicture","setEditorRef","ed","marginBottom","width","src","style","height","objectFit","variant","backgroundColor","color","type","accept","onChange","e","url","URL","createObjectURL","target","files","display","ref","image","border","rotate","scale","value","min","max","step","event","onClick","toast","getImageScaledToCanvas","toDataURL"],"sourceRoot":""}