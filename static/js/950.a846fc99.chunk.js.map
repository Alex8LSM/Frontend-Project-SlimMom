{"version":3,"file":"static/js/950.a846fc99.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","redux/dairy/dairySelector.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm.jsx","webpack://Frontend-Project-SlimMom/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    border-radius: 50%;\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { useState } from 'react';\n// import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport moment from 'moment';\n\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nimport { fetchDairy} from '../../redux/dairy/dairyOperations'\nimport {addDate } from '../../redux/dairy/dairyReducer';\n\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(moment(new Date()));\n  const [openCalendar, setOpenCalendar] = useState(false);\n\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   // dispatch(fetchDairy(dateFormat(value)));\n  //   getDairy(dateFormat(value))\n  // }, [dispatch]);\n\n  const getDairy = (date) => {\n    dispatch(fetchDairy(date));\n  };\n  \n  const setDate = (date) => {\n    dispatch(addDate(date));\n  };\n\n  function dateFormat(date) {\n    return `${date.format('YYYY.MM.DD')}Z`\n  }\n\n  setDate(dateFormat(value))\n  // getDairy(dateFormat(value))\n  \n\n  const Div = styled.div`\n    display: flex;\n    margin: 0;\n    padding: 0;\n  `;\n\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n\n`;\n\n  return (\n    <Div>\n      <Datetime\n        inputProps={{ className: 'form-control' }}\n        dateFormat=\"DD.MM.yyyy\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={newValue => {\n          setValue(newValue);\n          setOpenCalendar(false);\n          setDate(dateFormat(newValue))\n          getDairy(dateFormat(newValue))\n        }}\n      />\n      <DatePickerWrapperStyles />\n      <Button\n        onClick={() => {\n          setOpenCalendar(true);\n        }}\n        background={layoutStyles.mainBackground}\n        width={'23px'}\n        height={'23px'}\n\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","export const getDairy = (state) => state.dairy.daySummary; \nexport const getProducts = (state) => state.dairy.productList; \nexport const getDate = (state) => state.dairy.dateFind;\nexport const getSummary = (state) => state.dairy.summary;\nexport const getNotRecFood = (state) => state.dairy.notRecFood;\nexport const getEatProducts = (state) => state.dairy.products; \n","// import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport {DivStyles} from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { getEatProducts } from '../../redux/dairy/dairySelector';\n\n\nexport default function ProductsList() {\n  // const [value, setValue] = useState(products);\n  // const [openCalendar, setOpenCalendar] = useState(false);\n\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   // dispatch(fetchDairy(dateFormat(value)));\n  //   getDairy(date)\n  // }, [dispatch]);\n\n  // const getDairy = (date) => {\n  //   dispatch(fetchDairy(date));\n  // };\n\n// if (Array.isArray(products))\n  const products = useSelector(getEatProducts);\n  // const products = []\n\n  return (\n    <>\n      <div className=\"control\">\n        <table className=\"table\">\n          <tbody>\n            {products.map(row => {\n              return (\n                <tr key={row.name}>\n                  <td className=\"td-name\">{row.title.ua}</td>\n                  <td className=\"td-weight\">{row.weight} гр</td>\n                  <td className=\"td-calories\">{row.calories} ккал</td>\n                  <td>\n                    <Button\n                      background={layoutStyles.mainBackground}\n                      width=\"28px\"\n                      height=\"28px\"\n                      backgroundHover={layoutStyles.formBorderColor}\n\n                      // clickOnBtn={() => {\n                      //   setOpenCalendar(true);\n                      // }}\n                      // className={styles.iconRemove}\n                    >\n                      <FiX\n                        width=\"14\"\n                        height=\"14\"\n                        color={layoutStyles.placeholderColor}\n                      />\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <DivStyles />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n// import moment from 'moment';\nimport { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport Button from '../button/Button.styled';\nimport { ImPlus } from 'react-icons/im';\n\nimport { fetchProducts, addProduct } from '../../redux/dairy/dairyOperations';\nimport { getProducts, getDate } from '../../redux/dairy/dairySelector';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-outlined': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nexport default function ProductForm(styles) {\n  const [productId, setProductId] = useState('');\n  const [productWeight, setWeight] = useState('');\n\n  const dispatch = useDispatch();\n\n  // const getDairy = (date) => {\n  //   dispatch(fetchDairy(date));\n  // };\n\n  const products = useSelector(getProducts); // список найденных продуктов\n  const date = useSelector(getDate);        // форматированная дата на которую добавляем проукт\n\n  const findProduct = name => {\n    dispatch(fetchProducts(name));\n  };\n\n  function onSubmit() {\n\n    dispatch(addProduct({ date, productId, productWeight }));\n    setProductId('');\n    setWeight('');\n    // getDairy(date)\n  };\n \n\n  const FormikWrapperStyles = createGlobalStyle`\n  .wrapper{\n    position: absolute;\n    top: 0;\n    ${styles};\n    /* top: -170%; */\n\n  }\n   .ProductForm {\n    padding-top: 80px;\n    background-color: white;\n  display: block;\n  margin: 0px;\n  outline: none;\n  width: 100%;\n  height: 100vh;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    .wrapper{\n    position: relative;\n    display: block;\n  }\n .ProductForm {\n  display: flex;\n  margin: 0px;\n  outline: none;\n  width: 240px;\n  height: 100%;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n\n`;\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className={'wrapper'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        //   onSubmit={(values, actions) => {\n        //     setTimeout(() => {\n        //       alert(JSON.stringify(values, null, 2));\n        //       actions.setSubmitting(false);\n        //     }, 1000);\n        //   }}\n\n        // onSubmit={onSubmit}\n      >\n        <Form className={'ProductForm'}>\n          <div className={'ProductName'}>\n            <Autocomplete\n              disablePortal\n              autoSelect\n              selectOnFocus\n              id=\"product\"\n              options={products}\n              noOptionsText={'Такий продукт не знайдено'} // якщо продукту не має в списку можливих значень\n              classes={classes}\n              onChange={(_, v) => {setProductId(v.id)}}\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '240px',\n              }}\n              renderInput={params => (\n                <TextField\n                  fullWidth\n                  required\n                  onChange={e => findProduct(e.currentTarget.value)}\n                  {...params}\n                  label=\"Введіть назву продукту\"\n                />\n              )}\n            />\n          </div>\n          <div className={'ProductWeight'}>\n            <TextField\n              required\n              fullWidth\n              id=\"weight\"\n              type=\"number\"\n              step=\"1\"\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '140px',\n                margin: '0 32px 60px 0',\n                // textAlign: \"right\", // не работает\n              }}\n              onChange={e => {setWeight(e.currentTarget.value)}}\n              classes={classes}\n              label=\"Вага продукта\"\n            />\n          </div>\n          <Button\n            margin=\"0 auto 0\"\n            type='submit'\n            onClick={() => {\n              onSubmit();\n            }}\n            >\n            {isMobile ? (\n              <p weight=\"176px\">Додати</p>\n            ) : (\n              <ImPlus\n                width=\"20\"\n                height=\"20\"\n                fill={layoutStyles.mainBackground}\n              />\n            )}\n          </Button>\n        </Form>\n      </Formik>\n\n      <FormikWrapperStyles />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"DiaryPage_Wrapper__4CjeL\",\"WrapperDate\":\"DiaryPage_WrapperDate__S3ccC\"};","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\n\nimport styles from './DiaryPage.module.css';\n\nexport default function DiaryPage() {\n  const [addProduct, setAddProduct] = useState(false);\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <div className={styles.Wrapper}>\n      <div className={styles.WrapperDate}>\n        <DateCalendar />\n      </div>\n\n      {isMobile && addProduct ? <ProductForm  /> : <ProductForm display={'none'} />}\n      <ProductsList />\n      {isMobile && (\n        <Button\n        onClick={()=>{setAddProduct(true)}}\n        margin={'60px auto 0'}\n        >\n          <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n        </Button>\n      )}\n    </div>\n  );\n}\n"],"names":["Btn","styled","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","DateCalendar","useState","moment","Date","value","setValue","openCalendar","setOpenCalendar","dispatch","useDispatch","setDate","date","addDate","dateFormat","format","Div","DatePickerWrapperStyles","createGlobalStyle","inputProps","className","timeFormat","closeOnSelect","open","onChange","newValue","fetchDairy","onClick","DivStyles","getProducts","state","dairy","productList","getDate","dateFind","getEatProducts","products","ProductsList","useSelector","map","row","title","ua","weight","calories","color","name","useStyles","makeStyles","theme","root","fontFamily","fontWeight","fontSize","border","textAlign","padding","inputRoot","minWidth","ProductForm","styles","productId","setProductId","productWeight","setWeight","FormikWrapperStyles","isMobile","useMediaQuery","query","classes","initialValues","product","Autocomplete","disablePortal","autoSelect","selectOnFocus","id","options","noOptionsText","_","v","sx","borderBottom","renderInput","params","TextField","fullWidth","required","e","currentTarget","fetchProducts","label","type","step","addProduct","DiaryPage","setAddProduct"],"sourceRoot":""}