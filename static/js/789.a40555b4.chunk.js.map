{"version":3,"file":"static/js/789.a40555b4.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.js","components/button/Button.styled.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/DailyCalorieIntake/Title.styled.js","components/DailyCalorieIntake/Box.styled.js","components/DailyCalorieIntake/Span.styled.js","components/DailyCalorieIntake/BoxFlex.styled.js","components/DailyCalorieIntake/BoxWraper.styled.js","components/DailyCalorieIntake/BoxSummary.styled.js","components/DailyCalorieIntake/DailyCalorieIntake.js","components/Modal/ModalContent/ModalContent.jsx","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.styled.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.js","pages/MainPage/MainPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport BgTablet from '../../images/BackgroundTablet.webp';\nimport BgDesk from '../../images/BackgroundDesc.webp';\n\nexport const ResponsiveContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    // height: 100vh;\n    padding: 20px 20px;\n    // background-image: url(${BgTablet});\n\n    background-position: bottom left;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    // height: 100vh;\n    // width: 1280px;\n    // background-image: url(${BgDesk});\n    background-position: bottom right;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveContainer } from './Container.styled';\n\nexport default function Container({children}){\nreturn <ResponsiveContainer>\n          {children}\n      </ResponsiveContainer>\n}\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\n\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    border-radius: 50%;\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\n\nconst { mainBackground, activeButton, placeholderColor, formBorderColor } =\n  layoutStyles;\n\nconst PlaceholderContainer = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n\n  @media screen and (min-device-width: 768px) {\n    margin-right: 30px;\n\n    &:nth-child(4) {\n      margin-right: 0px;\n    }\n\n    &:nth-child(3) {\n      margin-bottom: 0px;\n    }\n  }\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  color: #212121;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 768px) {\n    font-size: 18px;\n    line-height: 1.44;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-device-width: 768px) {\n    font-size: 34px;\n    line-height: 41px;\n    margin-bottom: 80px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${placeholderColor};\n  font-family: 'Raleway', sans-serif;\n  pointer-events: none;\n  position: absolute;\n  transition: all 200ms;\n  top: 0px;\n  left: 0px;\n  background-color: transparent;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid ${formBorderColor};\n  padding:0px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n   color: ${placeholderColor};\n  padding-bottom:8px;\n  width:240px;\n  background:transparent;\n  }\n  \n    &:hover,&:focus  {  \n    color:  ${activeButton};\n    border-bottom: 1px solid ${activeButton};\n  }\n  \n \n\n&::-webkit-outer-spin-button,\n&::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n \n[type=number] {\n  -moz-appearance:textfield;\n}\n\n &:focus + ${Label},&:not(:placeholder-shown) + ${Label} { top: -22px;\n    left: -10px;\n    font-size: 11px;\n    background:transparent;\n    padding:  10px;}\n\n`;\n\nconst Form = styled.form`\n  margin-bottom: 40px;\n  @media screen and (min-device-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    height: 160px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst BloodTypeTitle = styled.div`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  padding-bottom: 10px;\n\n  max-width: 240px;\n  @media screen and (min-device-width: 768px) {\n    border-bottom: 1px solid #ccc;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BloodTypeRadioContainer = styled.div`\n  width: 240px;\n  min-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst BloodTypeLabel = styled.label`\n  position: relative;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  margin-left: 20px;\n`;\n\nconst BloodTypeCheckBox = styled.span`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  top: 0;\n  background: ${mainBackground};\n  border: 1px solid ${formBorderColor};\n  margin-left: -20px;\n`;\n\nconst Text = styled.span`\n   color: ${placeholderColor};\n  margin-left 8px;\n`;\n\nconst BloodTypeRadioBtn = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  z-index: -1;\n\n  &:hover,&:focus ~ ${BloodTypeCheckBox} {\n    cursor:pointer;\n    background: fff;}\n\n&: checked ~ ${Text}{color: ${activeButton};}\n\n &: checked ~ ${BloodTypeCheckBox}  {\n    background: fff;\n    &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    content: '';\n    border-radius: 50%;\n    border-color: transparent;\n    width: 10px;\n    height: 10px;\n    background: ${activeButton};}\n\n    \n`;\n\nconst StileWrapper = styled.div``;\n\nconst StileButtonWrapper = styled.div``;\n\nconst ErrorWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  font-size: 11px;\n  color: red;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: none;\n  background-color: ${activeButton};\n  width: 210px;\n  min-height: 43px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  color: #fff;\n\n  @media screen and (min-device-width: 768px) {\n    margin: 0;\n  }\n  @media screen and (min-device-width: 1280px) {\n    margin-right: 0;\n  }\n`;\n\nexport {\n  Form,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  StileWrapper,\n  Text,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n  Btn,\n};\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { MdClose } from 'react-icons/md';\n\nconst { footerBackground, mainBackground, modalWrapperColor, verdanaBold } =\n  layoutStyles;\n\nexport const Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: scroll;\n  background: ${footerBackground};\n`;\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 672px;\n  min-height: 573px;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  background: ${mainBackground};\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    top: 65%;\n    left: 50%;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: ${verdanaBold};\n  padding: 64px 81px 81px 81px;\n  text-align: center;\n  font-family: 'Verdana';\n  margin: auto;\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    padding: 40px 20px 120px 20px;\n  }\n`;\n\nexport const CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  z-index: 10;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;","import React, { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Background, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ showModal, setShowModal, children }) => {\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const closeOnEscapeKey = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', closeOnEscapeKey);\n    return () => document.removeEventListener('keydown', closeOnEscapeKey);\n  }, [closeOnEscapeKey]);\n  return createPortal(\n    <>\n      {showModal && (\n        <Background ref={modalRef} onClick={closeModal}>\n          <ModalWrapper showModal={showModal}>{children}</ModalWrapper>\n        </Background>\n      )}\n    </>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\n\n const Title=styled.h3`\n font-family: 'Verdana';\n font-style: normal;\n font-weight: 700;\n font-size: 14px;\n line-height: 17px;\n letter-spacing: 0.04em;\n \n color: #212121;\n margin-bottom: 20px;\n\n  `\n\n  export default Title;","import styled from 'styled-components';\nconst Box = styled.div`\nbackground: #F0F1F3;\npadding: 40px 20px 24px 20px;\n@media screen and (min-width: 768px) and (max-width: 1024px) {\n    display: flex; \n    flex-direction: row;\n  }\n\n  `\n\n  export default Box;","import styled from 'styled-components';\nconst Span = styled.p`\n\n\nfont-family: 'Verdana';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 14px;\nline-height: 17px;\nletter-spacing: 0.04em;\n\ncolor: #9B9FAA;\n`\n\n\nexport default Span;\n","import styled from 'styled-components';\nconst BoxFlex = styled.div`\ndisplay: flex;\njustify-content: space-between; \n\n\n\n  `\n\n  export default BoxFlex;","import styled from 'styled-components';\nconst BoxWraper = styled.div`\ndisplay:flex;\nheight: 112px;\nflex-direction: column;\n    justify-content: space-between;\n    margin-bottom: 40px;\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n      width: 288px;\n    }\n  `\n\n  export default BoxWraper;","import styled from 'styled-components';\nconst Box = styled.div`\n\n@media screen and (min-width: 768px) and (max-width: 1024px) {\n   width:288px;\n  }\n\n  `\n\n  export default Box;","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Title from './Title.styled';\nimport Box from './Box.styled';\nimport Span from './Span.styled';\nimport BoxFlex from './BoxFlex.styled';\nimport BoxWraper from './BoxWraper.styled';\nimport BoxSummary from './BoxSummary.styled';\n\n\n\n\nconst fixDate = number =>  String(number).length < 2 ? '0'+ number : number;\n\nconst DailyCalorieIntake = () => {\n    // eslint-disable-next-line no-unused-vars\n    const DailyList = ({})\n    const today = new Date();\n\n    \n      const formateDate = `${fixDate(today.getDate())}/${fixDate(today.getMonth())}/${today.getFullYear()}`\n        \n      const left = '000'; \n      const consumed = '000';\n      const dailyRate = '000'; \n      const result = '000'; \n      const food = 'All broths / decoctions, oily fish, caviar and meat, mushrooms, cereals (millet, barley, wheat)';\n     \n\n        \n    \n    \n\n\n  return (\n      <Box>\n          <BoxSummary>\n              <Title>Summary for {formateDate} </Title>\n                 <BoxFlex>\n                 <BoxWraper>\n              <Span>Left</Span>\n              <Span>Consumed</Span>\n             <Span>Daily rate</Span>\n             <Span>n% of normal</Span>\n         </BoxWraper><BoxWraper>\n          <Span>{left} kcal</Span>\n          <Span>{consumed} kcal</Span>\n        <Span>{dailyRate} kcal</Span>\n        <Span>{result} %</Span>\n      </BoxWraper></BoxFlex>\n         </BoxSummary>\n\n      \n      \n      <div><Title>Food not recommended</Title>\n      <Span>{food ? food :\"Your diet will be displayed here\"}</Span></div>\n      \n\n      </Box>\n      \n\n  )  \n};\nexport default DailyCalorieIntake;","import { useNavigate } from 'react-router-dom';\nimport Button from '../../button/Button.styled';\nimport DailyCalorieIntake from '../../DailyCalorieIntake/DailyCalorieIntake';\nimport Title from '../../DailyCalorieIntake/Title.styled';\nimport { Content, CloseModalButton } from '../Modal.styled';\n\nexport const ModalContent = ({ setShowModal }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div>\n      <Content>\n        <DailyCalorieIntake>\n          <Title />\n        </DailyCalorieIntake>\n        <Button centered={'true'} onClick={() => navigate('/signup')}></Button>\n      </Content>\n      <CloseModalButton\n        aria-label=\"Close modal\"\n        onClick={() => {\n          setShowModal(prev => !prev);\n        }}\n      />\n    </div>\n  );\n};","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Btn,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  Text,\n  StileWrapper,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n} from './CalculatorСalorieForm.styled';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport calcOperation from '../../../redux/calculatorSlice/calcOperation';\nimport { Modal } from '../../Modal';\nimport React, { useState } from 'react';\n\nconst CalculatorSchema = Yup.object().shape({\n  height: Yup.number('number')\n    .min(100, 'Мінімальний зріст 100 см')\n    .max(250, 'Максимальний зріст 250 см')\n    .required('Обов`язково до заповнення'),\n  age: Yup.number()\n    .min(18, 'Мінімальний вік 18 років')\n    .max(100, 'Максимальний вік 100 років ')\n    .required('Обов`язково до заповнення'),\n  currentWeight: Yup.number()\n    .moreThan(\n      Yup.ref('desiredWeight'),\n      'Поточна вага має бути більшою за бажану'\n    )\n    // .min(30, 'Мінімальна вага 30 кг')\n    .max(120, 'Максимальна вага 120 кг')\n    .required('Обов`язково до заповнення'),\n  desiredWeight: Yup.number()\n    .min(20, 'Мінімальна вага 20 кг')\n    .max(500, 'Максимальна вага 500 кг')\n    .required('Обов`язково до заповнення'),\n  bloodType: Yup.string().required(),\n});\n\nconst CalculatorСalorieForm = () => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  return (\n    <StileWrapper>\n      <Header>Розрахуйте свою денну норму калорій прямо зараз</Header>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '1',\n        }}\n        validationSchema={CalculatorSchema}\n        onSubmit={(values, actions) => {\n          dispatch(calcOperation.calc(values));\n          setShowModal(true);\n          setTimeout(async () => {\n            alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n            // actions.resetForm();\n          }, 1000);\n\n        }}\n      >\n        {props => {\n          const { values, handleSubmit, handleChange } = props;\n          const { height, age, currentWeight, desiredWeight } = values;\n\n          const settings = [\n            {\n              name: 'height',\n              type: 'number',\n              label: 'Зріст*',\n              value: height,\n            },\n            {\n              name: 'age',\n              type: 'number',\n              label: 'Вік*',\n              value: age,\n            },\n            {\n              name: 'currentWeight',\n              type: 'number',\n              label: 'Поточна вага*',\n              value: currentWeight,\n            },\n            {\n              name: 'desiredWeight',\n              type: 'number',\n              label: 'Бажана вага*',\n              value: desiredWeight,\n            },\n          ];\n\n          const bloodSettings = [\n            { id: 'bloodType1', value: '1' },\n            { id: 'bloodType2', value: '2' },\n            { id: 'bloodType3', value: '3' },\n            { id: 'bloodType4', value: '4' },\n          ];\n\n          return (\n            <>\n              <Form id=\"calculatorForm\" onSubmit={handleSubmit}>\n                {settings.map(({ name, type, label, value }) => {\n                  return (\n                    <PlaceholderContainer key={name}>\n                      <Input\n                        id={name}\n                        name={name}\n                        type={type}\n                        onChange={handleChange}\n                        value={value}\n                        placeholder=\" \"\n                      />\n\n                      <Label htmlFor={label}>{label}</Label>\n                      <ErrorMessage\n                        className=\"menu navigation-menu\"\n                        component={ErrorWrapper}\n                        name={name}\n                      />\n                    </PlaceholderContainer>\n                  );\n                })}\n\n                <BloodTypeTitle>Група крові*</BloodTypeTitle>\n                <BloodTypeRadioContainer>\n                  {bloodSettings.map(({ id, value }) => {\n                    return (\n                      <BloodTypeLabel key={id}>\n                        <BloodTypeRadioBtn\n                          checked={values.bloodType === value}\n                          type=\"radio\"\n                          id={id}\n                          name=\"bloodType\"\n                          onChange={handleChange}\n                          value={value}\n                        />\n                        <BloodTypeCheckBox></BloodTypeCheckBox>\n                        <Text>{value}</Text>\n                      </BloodTypeLabel>\n                    );\n                  })}\n                </BloodTypeRadioContainer>\n              </Form>\n              <StileButtonWrapper>\n                <Btn form=\"calculatorForm\" type=\"submit\">\n                  Почніть худнути\n                </Btn>\n              </StileButtonWrapper>\n            </>\n          );\n        }}\n      </Formik>\n      <Modal showModal={showModal} />\n    </StileWrapper>\n  );\n};\n\nexport default CalculatorСalorieForm;\n","import styled from 'styled-components';\n\nexport const CalculatorWrapperStyle = styled.div`{\n  \n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 767px) {\n  display: flex;\n  justify-content: center;\n    max-width: 320px;\n    padding-top:32px;\n  \n  }\n\n  @media screen and (min-device-width: 768px)  {\n     max-width:510px;\n    padding-top: 100px;\n      margin-left: 0px;\n  }\n\n   @media screen and (min-device-width: 1280px) {\n     padding-top: 140px;\n     max-width:510px;\n     margin-left: 0px;\n\n  }\n`;\n","import CalculatorСalorieForm from '../CalculatorСalorieForm';\nimport { CalculatorWrapperStyle } from './CalculatorWrapper.styled';\n\nexport default function CalculatorWrapper() {\n  return (\n    <CalculatorWrapperStyle>\n      <CalculatorСalorieForm />\n    </CalculatorWrapperStyle>\n  );\n}\n","import { useState } from 'react';\nimport Container from '../../components/Container';\nimport CalculatorFormWrapper from '../../components/Forms/CalculatorFormWrapper';\nimport { Modal } from '../../components/Modal';\nimport { ModalContent } from '../../components/Modal/ModalContent';\n\nexport default function MainPage() {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <Container>\n      <CalculatorFormWrapper />\n      <Modal showModal={showModal} setShowModal={setShowModal}>\n        <ModalContent setShowModal={setShowModal} />\n      </Modal>\n    </Container>\n  );\n}\n"],"names":["ResponsiveContainer","styled","BgTablet","BgDesk","Container","children","Btn","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","mainBackground","activeButton","placeholderColor","formBorderColor","PlaceholderContainer","Header","Label","Input","Form","BloodTypeTitle","BloodTypeRadioContainer","BloodTypeLabel","BloodTypeCheckBox","Text","BloodTypeRadioBtn","StileWrapper","StileButtonWrapper","ErrorWrapper","footerBackground","modalWrapperColor","verdanaBold","Background","ModalWrapper","Content","CloseModalButton","MdClose","modalRoot","document","querySelector","Modal","showModal","setShowModal","modalRef","useRef","closeOnEscapeKey","useCallback","e","key","useEffect","addEventListener","removeEventListener","createPortal","ref","onClick","current","target","fixDate","number","String","length","today","Date","formateDate","getDate","getMonth","getFullYear","food","ModalContent","navigate","useNavigate","centered","prev","CalculatorSchema","Yup","shape","min","max","required","age","currentWeight","moreThan","desiredWeight","bloodType","dispatch","useDispatch","useState","initialValues","validationSchema","onSubmit","values","actions","calcOperation","setTimeout","alert","JSON","stringify","setSubmitting","handleSubmit","handleChange","settings","name","type","label","value","id","map","onChange","placeholder","htmlFor","className","component","checked","form","CalculatorWrapperStyle","CalculatorWrapper","MainPage"],"sourceRoot":""}