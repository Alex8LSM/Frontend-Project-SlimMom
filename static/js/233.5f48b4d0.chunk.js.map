{"version":3,"file":"static/js/233.5f48b4d0.chunk.js","mappings":"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","sources":["components/Header/UserMenu.styled.js","components/SummaryForDay/SummaryforDay.styled.js","components/SummaryForDay/SummaryForDay.jsx","components/button/Button.styled.js","components/DateCalendar/DateCalendar.styled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm/ProductForm.styled.js","components/Forms/ProductForm/ProductForm.jsx","pages/DiaryPage/DiaryPage.js","pages/DiaryPage/DiaryPage.styled.js","redux/dairy/dairySelector.js","stlyles/toastStyled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { FiCornerDownLeft } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin: 0;\n  display: inline;\n  font-family: ${layoutStyles.gothamPro};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 13px;\n  letter-spacing: 0.04em;\n  padding: 15px 16px 13px 0;\n  margin-left: 10px;\n  border-right: 2px solid ${layoutStyles.formBorderColor};\n`;\n\nexport const Button = styled.button`\n  font-family: ${layoutStyles.gothamPro};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 13px;\n  letter-spacing: 0.04em;\n  color: ${layoutStyles.placeholderColor};\n  border: none;\n  background-color: transparent;\n  padding: 4px 10px 0 15px;\n  cursor: pointer;\n  z-index: 30;\n  &:hover {\n    color: ${layoutStyles.activeButton};\n  }\n`;\n\nexport const Arrow = styled(FiCornerDownLeft)`\n  @media only screen and (min-width: ${layoutStyles.tablet}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const List = styled.div`\n  display: none;\n  @media only screen and (min-width: ${layoutStyles.deskTop}) {\n    display: flex;\n    margin-right: 550px;\n  }\n`;\n\nexport const ListItem = styled(NavLink)`\n  color: ${layoutStyles.placeholderColor};\n  font-family: ${layoutStyles.gothamPro};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 13px;\n  letter-spacing: 0.04em;\n  padding: 10px 10px 10px 0;\n  &.active {\n    color: #212121;\n  }\n`;\n\nexport const ToastTitle = styled.h2`\n  padding: 20px;\n  font-family: ${layoutStyles.gothamPro};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 13px;\n  letter-spacing: 0.04em;\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n`;\nexport const ImgAvatar = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\nexport const WrapperAvatar = styled.div`\n  width: 50px;\n  height: 45px;\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\n@media screen and (max-width: 767px) {\nmargin-top: 100px;\npadding-bottom: 85px;\n}\n\n@media screen and (min-width: 768px) and (max-width: 1279px) {\nflex-direction: row;\njustify-content: flex-start;\nmargin-top: 130px;\npadding-left: 15px;\npadding-bottom: 85px;\n}\n\n@media screen and (min-width: 1280px) {\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 288px;\nmargin-right: 135px;\n}\n`;\n\nexport const SummaryWrap = styled.div`\nwidth: 288px;\n\n@media screen and (max-width: 767px) {\n  margin-bottom: 40px;\n  }\n\n @media screen and (min-width: 768px) and (max-width: 1279px) {\n  margin-right: 80px;\n  }\n\n @media screen and (min-width: 1280px) {\n  margin-bottom: 60px;\n  } \n`;\n\nexport const FoodRecWrap = styled.div`\nwidth: 288px;\n\n`;\n\nexport const List = styled.ul`\n`;\n\nexport const Item = styled.li`\ndisplay:flex;\njustify-content: space-between;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\n\nfont-size: 14px;\n`;\n\nexport const Text = styled.p`\nfont-size: 14px;\nfont-weight: 400;\nline-height: 2;\n\ncolor: #9B9FAA;\n`;","import { format } from 'date-fns';\nimport { useSelector } from 'react-redux';\nimport { getSummary, getDate, getNotRecFood } from 'redux/dairy/dairySelector';\nimport { getDaily } from 'redux/dairy/dairySelector';\nimport {\n  Wrapper,\n  SummaryWrap,\n  FoodRecWrap,\n  List,\n  Item,\n  Title,\n  Text,\n} from './SummaryforDay.styled';\n\nexport default function SummaryForDay() {\n  const date = new Date();\n  const reduxDate = useSelector(getDate);\n  const dailyRate = useSelector(getDaily);\n  const summary = useSelector(getSummary);\n  const notRecFoodArr = useSelector(getNotRecFood);\n\n  return (\n    <Wrapper>\n      <SummaryWrap>\n        <Title>Загалом за {reduxDate === '' ? format(date, 'dd/MM/yyyy') : format(new Date(reduxDate), 'dd/MM/yyyy')}</Title>\n        <List>\n        <Item>\n          <Text>Залишилось</Text><Text>{summary.left ? Math.round(summary.left) : '000'} ккал</Text>\n        </Item>\n        <Item>\n          <Text>Спожито</Text><Text>{summary.consumed ? Math.round(summary.consumed) : '000'} ккал</Text>\n        </Item>\n        <Item>\n          <Text>Добова норма</Text><Text>{dailyRate ? Math.round(dailyRate) : '000'} ккал</Text>\n          </Item>\n        <Item>\n          <Text>n% від норми</Text><Text>{summary.nOfNorm ? Math.round(summary.nOfNorm) : '000'} %</Text>\n        </Item>\n        </List>\n      </SummaryWrap>\n\n      <FoodRecWrap>\n        <Title>Не рекомендована їжа</Title>\n        <Text>{\n          notRecFoodArr.length === 0\n            ? 'Ваша діета буде відображатись тут'\n            :\n            notRecFoodArr.map(product=>product.title.ua).join(', ').toLowerCase() }</Text>\n      </FoodRecWrap>\n\n    </Wrapper>\n  )\n};\n\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  box-shadow:  ${props => props.background || `0px 4px 10px ${layoutStyles.activeButton}`};\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { layoutStyles } from '../../stlyles/layoutStyles';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n const Div = styled.div`\n display: flex;\n margin: 0;\n padding: 0;\n`;\n\nconst DatePickerWrapperStyles = createGlobalStyle`\n  .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n  font-family: ${layoutStyles.verdana};\n  letter-spacing: 0.04em;\n  background: transparent;\n    table{\n  font-size: 16px;\n  font-weight: 400;\n}\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n`;\n\nexport {Div, DatePickerWrapperStyles}\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport 'moment/locale/uk';\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport { Div, DatePickerWrapperStyles } from './DateCalendar.styled';\nimport { toastStyles } from '../../stlyles/toastStyled';\nimport { toast } from 'react-toastify';\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nimport { fetchDairy } from '../../redux/dairy/dairyOperations';\nimport { addDate } from '../../redux/dairy/dairyReducer';\nimport authSelector from '../../redux/auth/selectors';\nmoment.locale('uk')\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(moment(new Date()));\n  const [openCalendar, setOpenCalendar] = useState(false);\n  const dispatch = useDispatch();\n  const dateConnect = new Date(useSelector(authSelector.getStartDate));\n  const maxDate = moment(new Date());\n  const minDate = moment(dateConnect);\n\n  function dateFormat(date) {\n    return `${date.format('YYYY.MM.DD')}Z`;\n  }\n  useEffect(() => {\n    dispatch(addDate(dateFormat(value)));\n    dispatch(fetchDairy(dateFormat(value)));\n  }, [value, dispatch]);\n\n  const setDate = date => {\n    dispatch(addDate(date));\n  };\n\n  fetchDairy(dateFormat(value));\n\n  const onChange = newValue => {\n    setOpenCalendar(false);\n    if (!moment(newValue, 'DD.MM.YYYY', true).isValid()) {\n      newValue = maxDate;\n      return;\n    }\n    if (newValue > maxDate) {\n      newValue = maxDate;\n      toast.warning(`Вибрана дата ще не настала!`, toastStyles);\n      return;\n    }\n    if (newValue < minDate) {\n      newValue = minDate;\n      toast.warning(`На вибрану дату у додатку не має історії!`, toastStyles);\n      return;\n    }\n    setValue(newValue);\n    setDate(dateFormat(newValue));\n  };\n  return (\n    <Div>\n      <Datetime\n      locale=\"uk\" \n        className=\"form-control\"\n        dateFormat=\"DD.MM.YYYY\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={onChange}\n      />\n\n      <Button\n        onClick={() => {\n          if (openCalendar) {\n            return setOpenCalendar(false);\n          }\n          setOpenCalendar(true);\n        }}\n        background={'transparent'}\n        boxShadow={'none'}\n        width={'23px'}\n        height={'23px'}\n        margin={'0'}\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n      <DatePickerWrapperStyles />\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.info{\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  padding: 60px;\n  line-height: 2em;\n  letter-spacing: 0.04em;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  line-height: 1.22;\n  letter-spacing: 0.04em;\n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Btn from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { DivStyles } from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport {\n  getEatProducts,\n  getDate,\n  getError,\n} from '../../redux/dairy/dairySelector';\nimport { toastStyles, toastModal,toastModalPosition } from '../../stlyles/toastStyled';\nimport { Button, ToastTitle } from '../Header/UserMenu.styled';\nimport { removeProduct } from '../../redux/dairy/dairyOperations';\n\nexport default function ProductsList() {\n  const dispatch = useDispatch();\n\n  const deleteProduct = (date, id) => {\n    dispatch(removeProduct({ dataFormat: date, id: id }));\n  };\n  const date = useSelector(getDate);\n  const products = useSelector(getEatProducts);\n  const error = useSelector(getError);\n\n  const notify = id =>\n    toast(\n      <>\n        <ToastTitle>Ви впевнені,що хочете видалити?</ToastTitle>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            toast.dismiss();\n            deleteProduct(date, id);\n            error\n              ? toast.error(`Виникла помилка! ${error.message}`, toastStyles)\n              : toast.success(`Видалено!`, toastStyles);\n          }}\n        >\n          Так\n        </Button>\n\n        <Button\n          type=\"button\"\n          onClick={() => {\n            toast.dismiss();\n          }}\n        >\n          Ні\n        </Button>\n      </>,\ntoastModalPosition\n    );\n\n  return (\n    <>\n      <div className=\"control\">\n        {products.length === 0 ? (\n          <p className=\"info\">\n            Тут буде список продуктів та напоїв, що з'їли та випили за день.{' '}\n          </p>\n        ) : (\n          <table className=\"table\">\n            <tbody>\n              {products.map(row => {\n                return (\n                  <tr key={row.id}>\n                    <td className=\"td-name\">{row.title.ua}</td>\n                    <td className=\"td-weight\">{row.weight} гр</td>\n                    <td className=\"td-calories\">\n                      {Math.round(row.calories)} ккал\n                    </td>\n                    <td>\n                      <Btn\n                        background={'transparent'}\n                        width=\"28px\"\n                        height=\"28px\"\n                        backgroundHover={layoutStyles.formBorderColor}\n                        onClick={() => {\n                          notify(row.id);\n                        }}\n                      >\n                        <FiX\n                          width=\"14\"\n                          height=\"14\"\n                          color={layoutStyles.placeholderColor}\n                        />\n                      </Btn>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <DivStyles />\n      <ToastContainer toastStyle={toastModal} />\n    </>\n  );\n}\n","import { layoutStyles } from '../../../stlyles/layoutStyles';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-root': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-input': {\n      textAlign: 'left',\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n      paddingRight: '2px',\n      paddingLeft: '2px',\n    },\n    '& .MuiOutlinedInput-input[type=number]': {\n      textAlign: 'right',\n    },\n    '& .MuiFormLabel-colorPrimary.Mui-focused ': {\n      color: layoutStyles.activeButton,\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-input': {\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n      background:' transparent',\n    },\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nconst DivWrapper = styled.div`\n  display: ${props => props.display};\n  position: absolute;\n  top: 0;\n  padding-top: 80px;\n  background-color: ${layoutStyles.mainBackground};\n\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    position: relative;\n    display: block;\n    padding: 0;\n    background: transparent;\n  }\n`;\n\nconst FormikWrapperStyles = createGlobalStyle`\n   .ProductForm {\n    padding-top: 80px;\n    background-color: ${layoutStyles.mainBackground};\n    display: block;\n    margin: 0px;\n    outline: none;\n    padding: 0 20px;\n    height: 100vh;\n}\n.ProductName {\n  margin:  0 32px 20px 0;\n}\n.BtnName{\n  width: 176px;\n  color: ${layoutStyles.mainBackground}\n}\n\n@media screen and (min-width: ${layoutStyles.tablet}) {\n .ProductForm {\n  display: flex;\n  margin:  0 0 60px 0;\n  padding: 0;\n  outline: none;\n  width: 240px;\n  height: 100%;\n  background: transparent;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin: 0 32px 0 0;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n`;\n\nexport { FormikWrapperStyles, useStyles, DivWrapper };\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\nimport debounce from 'lodash.debounce';\nimport { toast } from 'react-toastify';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../../redux/dairy/dairyReducer';\nimport {\n  fetchProducts,\n  addProduct,\n} from '../../../redux/dairy/dairyOperations';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\nimport { toastStyles } from '../../../stlyles/toastStyled';\nimport Button from '../../button/Button.styled';\nimport {\n  getProducts,\n  getDate,\n  getToggle,\n  getError,\n} from '../../../redux/dairy/dairySelector';\nimport {\n  FormikWrapperStyles,\n  useStyles,\n  DivWrapper,\n} from './ProductForm.styled';\n\nexport default function ProductForm() {\n  const [value, setValue] = useState(null);\n  const [productId, setProductId] = useState('');\n  const [productWeight, setWeight] = useState('');\n\n  const weight = Math.floor(productWeight)\n  const dispatch = useDispatch();\n\n  const products = useSelector(getProducts);\n  const date = useSelector(getDate);\n  const toggle = useSelector(getToggle);\n  let error = useSelector(getError);\n\n  const findProduct = value => {\n    dispatch(fetchProducts(value));\n  };\n\n  const debouncedFindProduct = debounce(findProduct, 400);\n\n  function onSubmit() {\n    if (productId === '') {\n      return toast.warning('Виберіть продукт!', toastStyles);\n    }\n    if (productWeight <= 0) {\n      return toast.warning('Вкажіть вагу продукту!', toastStyles);\n    }\n\n    if (productId !== '' && productWeight >= 1) {\n      dispatch(addProduct({ date, productId, productWeight: weight }));\n      error\n        ? toast.error(`Виникла помилка! ${error.message}`, toastStyles)\n        : toast.success(`З'їдено!`, toastStyles);\n      setProductId('');\n      setWeight('');\n      setValue('');\n    }\n  }\n  const onChangeProduct = e => {\n    if (e.currentTarget.value !== '')\n      debouncedFindProduct(e.currentTarget.value);\n  };\n\n  const onChangeWeight = e => {\n    const { value } = e.currentTarget;\n    if (value > 0) {\n      return setWeight(value);\n    }\n    if (value === '') {\n      setWeight('');\n    }\n  };\n\n  const validationWeight = e => {\n    e.target.value = Math.max(0, parseInt(e.target.value))\n      .toString()\n      .slice(0, 4);\n  };\n\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <DivWrapper display={isMobile && toggle ? 'block' : 'none'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        onSubmit={(values, { resetForm, setSubmitting }) => {\n          onSubmit();\n          if (isMobile && productId !== '' && productWeight >= 1) {\n            dispatch(changeToggle(false));\n          }\n          setSubmitting(false);\n          resetForm();\n        }}\n        onChange={e => console.log(e)}\n      >\n        {({ isSubmitting }) => (\n          <Form className={'ProductForm'}>\n            <div className={'ProductName'}>\n              <Autocomplete\n                isOptionEqualToValue={(option, value) =>\n                  option.iso === value.iso\n                }\n                autoSelect\n                selectOnFocus\n                id=\"product\"\n                name=\"product\"\n                options={products}\n                value={value}\n                noOptionsText={'Такий продукт не знайдено'} // якщо продукту не має в списку можливих значень\n                classes={classes}\n                onChange={(e, v) => {\n                  if (v === null) {\n                    setValue(v);\n                    setProductId('');\n                  }\n                  if (v && v.id) {\n                    setProductId(v.id);\n                    setValue(v);\n                  }\n                }}\n                sx={{\n                  borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                  width: isMobile ? '280px' : '240px',\n                }}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    onChange={onChangeProduct}\n                    label=\"Введіть назву продукту\"\n                  />\n                )}\n              />\n            </div>\n            <div className={'ProductWeight'}>\n              <TextField\n                fullWidth\n                id=\"weight\"\n                name=\"weight\"\n                type=\"number\"\n                value={productWeight}\n                onInput={validationWeight}\n                sx={{\n                  borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                  width: isMobile ? '280px' : '150px',\n                  paddingRight: '50px',\n                  margin: isMobile && '0 0 60px 0',\n                }}\n                onChange={onChangeWeight}\n                classes={classes}\n                label=\"Вага продукта\"\n              />\n            </div>\n            {isSubmitting && <LinearProgress />}\n            <Button\n              margin=\"0 auto 0\"\n              type=\"submit\"\n              borderRadius={isMobile && '30px'}\n              disabled={isSubmitting}\n            >\n              {isMobile ? (\n                <p className={'BtnName'}>Додати</p>\n              ) : (\n                <ImPlus\n                  width=\"20\"\n                  height=\"20\"\n                  fill={layoutStyles.mainBackground}\n                />\n              )}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <FormikWrapperStyles />\n    </DivWrapper>\n  );\n}\n","import { useMediaQuery } from 'react-responsive';\nimport {  useDispatch } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../redux/dairy/dairyReducer';\n\nimport { DivDate, DivWrapper, ContentWrap } from './DiaryPage.styled';\nimport SummaryForDay from 'components/SummaryForDay';\n\nexport default function DiaryPage() {\n  const dispatch = useDispatch();\n\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <motion.div\n      initial={{opacity:0}}\n      animate={{opacity:1}}\n      exit={{opacity:0, transition:{duration:0.3}}}\n    >\n      <ContentWrap>\n         <DivWrapper>\n        <DivDate>\n          <DateCalendar />\n        </DivDate>\n        <ProductForm />\n        <ProductsList />\n\n        {isMobile && (\n          <Button\n            onClick={() => {\n              dispatch(changeToggle(true));\n            }}\n            margin={'60px auto 0'}\n          >\n            <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n          </Button>\n        )}\n      </DivWrapper>\n      <SummaryForDay/>\n     </ContentWrap>\n    </motion.div>\n  );\n}\n","import { layoutStyles } from '../../stlyles/layoutStyles';\nimport styled from 'styled-components';\n\nconst ContentWrap = styled.div`\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  display: flex;\n  justify-content: space-between;\n  align-items:flex-start;\n  padding-top: 150px;\n  }\n`\n\nconst DivWrapper = styled.div`\n  position: relative;\n  display: block;\n  padding-top: 40px;\n  margin: 0 auto 0;\n  max-width: 320px;\n  z-index: 10;\n\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    max-width: 748px;\n    margin: 0;\n    padding-top: 100px;\n    background: transparent;\n  }\n  @media screen and (min-width: ${layoutStyles.deskTop}) {\n    max-width: 748px;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst DivDate = styled.div`\n  margin-bottom: 32px;\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport { DivDate, DivWrapper, ContentWrap };\n","export const getProducts = (state) => state.dairy.productList; \nexport const getDate = (state) => state.dairy.dateFind;\nexport const getToggle = (state) => state.dairy.toggle;\nexport const getSummary = (state) => state.dairy.summary;\nexport const getNotRecFood = (state) => state.calculator.userData.notRecFood;\nexport const getDaily = (state) => state.calculator.userData.dailyRate;\nexport const getEatProducts = (state) => state.dairy.products; \nexport const getError = (state) => state.dairy.error","const toastStyles = {\n    position: 'top-center',\n    theme: 'light',\n    autoClose: 1200,\n    hideProgressBar: true,\n    closeOnClick: false,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  }\n\n  const toastModalPosition = {\n    position: 'top-center',\n    theme: 'light',\n    autoClose: false,\n    hideProgressBar: false,\n    closeOnClick: false,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  }\n\n  const toastModal = {\n    top: '150px',\n          border: '1px solid #FC842D',\n          marginTop: '150px',\n  }  \n export {toastStyles,toastModal,toastModalPosition}"],"names":["Title","styled","layoutStyles","Button","Arrow","FiCornerDownLeft","List","ListItem","NavLink","ToastTitle","Wrapper","ImgAvatar","WrapperAvatar","SummaryWrap","FoodRecWrap","Item","Text","SummaryForDay","date","Date","reduxDate","useSelector","getDate","dailyRate","getDaily","summary","getSummary","notRecFoodArr","getNotRecFood","format","left","Math","round","consumed","nOfNorm","length","map","product","title","ua","join","toLowerCase","Btn","cursor","props","display","borderRadius","background","width","height","margin","backgroundHover","fill","Div","DatePickerWrapperStyles","createGlobalStyle","DateCalendar","useState","moment","value","setValue","openCalendar","setOpenCalendar","dispatch","useDispatch","dateConnect","authSelector","maxDate","minDate","dateFormat","useEffect","addDate","fetchDairy","locale","className","timeFormat","closeOnSelect","open","onChange","newValue","isValid","toast","toastStyles","onClick","boxShadow","DivStyles","ProductsList","products","getEatProducts","error","getError","notify","id","type","removeProduct","dataFormat","deleteProduct","message","toastModalPosition","row","weight","calories","color","toastStyle","toastModal","useStyles","makeStyles","theme","root","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","border","textAlign","padding","paddingRight","paddingLeft","inputRoot","minWidth","DivWrapper","FormikWrapperStyles","ProductForm","productId","setProductId","productWeight","setWeight","floor","getProducts","toggle","getToggle","debouncedFindProduct","debounce","fetchProducts","onChangeProduct","e","currentTarget","onChangeWeight","validationWeight","target","max","parseInt","toString","slice","isMobile","useMediaQuery","query","classes","initialValues","onSubmit","values","resetForm","setSubmitting","addProduct","changeToggle","console","log","isSubmitting","Autocomplete","isOptionEqualToValue","option","iso","autoSelect","selectOnFocus","name","options","noOptionsText","v","sx","borderBottom","renderInput","params","TextField","fullWidth","label","onInput","LinearProgress","disabled","DiaryPage","motion","initial","opacity","animate","exit","transition","duration","ContentWrap","DivDate","state","dairy","productList","dateFind","calculator","userData","notRecFood","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","top","marginTop"],"sourceRoot":""}