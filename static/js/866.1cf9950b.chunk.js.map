{"version":3,"file":"static/js/866.1cf9950b.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm.jsx","webpack://Frontend-Project-SlimMom/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    border-radius: 50%;\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(new Date());\n  const [openCalendar, setOpenCalendar] = useState(false);\n\n  const Div = styled.div`\n    display: flex;\n    margin: 0;\n    padding: 0;\n  `;\n\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n\n`;\n\n  return (\n    <Div>\n      <Datetime\n        inputProps={{ className: 'form-control' }}\n        dateFormat=\"DD.MM.yyyy\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={newValue => {\n          setValue(newValue);\n          setOpenCalendar(false);\n        }}\n      />\n      <DatePickerWrapperStyles />\n      <Button\n        onClick={() => {\n          setOpenCalendar(true);\n        }}\n        background={layoutStyles.mainBackground}\n        width={'23px'}\n        height={'23px'}\n\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","import Button from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport {DivStyles} from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst rows = [\n  { name: 'India', weight: 'IN', calorie: 10 },\n  { name: 'China', weight: 'CN', calorie: 10 },\n  { name: 'Italy', weight: 'IT', calorie: 10 },\n  { name: 'United States', weight: 'US', calorie: 10 },\n  { name: 'Canada', weight: 'CA', calorie: 10 },\n  { name: 'Australia', weight: 'AU', calorie: 10 },\n  { name: 'Germany', weight: 'DE', calorie: 10 },\n  { name: 'Ireland', weight: 'IR', calorie: 10 },\n  { name: 'Mexico', weight: 'MX', calorie: 10 },\n  { name: 'Japan', weight: 'JP', calorie: 10 },\n  { name: 'France', weight: 'FR', calorie: 10 },\n  { name: 'United Kingdom', weight: 'GB', calorie: 10 },\n  { name: 'Nigeria', weight: 'NG', calorie: 10 },\n  { name: 'Brazil', weight: 'BR', calorie: 10 },\n];\n\nexport default function ProductsList() {\n  return (\n    <>\n      <div className=\"control\">\n        <table className=\"table\">\n          <tbody>\n            {rows.map(row => {\n              return (\n                <tr key={row.name}>\n                  <td className=\"td-name\">{row.name}</td>\n                  <td className=\"td-weight\">{row.weight}</td>\n                  <td className=\"td-calories\">{row.calorie}</td>\n                  <td>\n                    <Button\n                      background={layoutStyles.mainBackground}\n                      width=\"28px\"\n                      height=\"28px\"\n                      backgroundHover={layoutStyles.formBorderColor}\n\n                      // clickOnBtn={() => {\n                      //   setOpenCalendar(true);\n                      // }}\n                      // className={styles.iconRemove}\n                    >\n                      <FiX\n                        width=\"14\"\n                        height=\"14\"\n                        color={layoutStyles.placeholderColor}\n                      />\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <DivStyles />\n    </>\n  );\n}\n","import React from 'react';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport Button from '../button/Button.styled';\nimport { ImPlus } from 'react-icons/im';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-outlined': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nexport default function ProductForm(styles) {\n \n\n\n\n//  const Div = styled.div`\n//     margin-bottom: 60px;\n//   `;\n\n  const FormikWrapperStyles = createGlobalStyle`\n  .wrapper{\n    position: absolute;\n    top: 0;\n    ${styles};\n    /* top: -170%; */\n\n  }\n   .ProductForm {\n    padding-top: 80px;\n    background-color: white;\n  display: block;\n  margin: 0px;\n  outline: none;\n  width: 100%;\n  height: 100vh;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    .wrapper{\n    position: relative;\n    display: block;\n  }\n .ProductForm {\n  display: flex;\n  margin: 0px;\n  outline: none;\n  width: 240px;\n  height: 100%;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n\n`;\nconst isMobile = useMediaQuery({\n  query: `(max-width: ${layoutStyles.tablet})`,\n});\n\n  const classes = useStyles();\n\n  return (\n    <div className={'wrapper'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        onSubmit={(values, actions) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n          }, 1000);\n        }}\n      >\n        <Form className={'ProductForm'}>\n          <div className={'ProductName'}>\n            <Autocomplete\n              disablePortal\n              id=\"product\"\n              options={top100Films}\n              classes={classes}\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '240px',\n              }}\n              renderInput={params => (\n                <TextField {...params} label=\"Введіть назву продукту\" />\n              )}\n            />\n          </div>\n          <div className={'ProductWeight'}>\n            <TextField\n              id=\"weight\"\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '140px',\n                margin: '0 32px 60px 0',\n              }}\n              classes={classes}\n              label=\"Вага продукта\"\n            />\n          </div>\n          <Button\n          margin='0 auto 0'\n          // clickOnBtn={() => {\n          //   setOpenCalendar(true);\n          // }}\n          // className={styles.iconPlus}\n          >\n            {isMobile ? <p weight='176px'>Додати</p> : <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} /> } \n            \n          </Button>\n        </Form>\n      </Formik>\n\n      <FormikWrapperStyles />\n    </div>\n  );\n}\n\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n \n \n];\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"DiaryPage_Wrapper__4CjeL\",\"WrapperDate\":\"DiaryPage_WrapperDate__S3ccC\"};","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\n\nimport styles from './DiaryPage.module.css';\n\nexport default function DiaryPage() {\n  const [addProduct, setAddProduct] = useState(false);\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <div className={styles.Wrapper}>\n      <div className={styles.WrapperDate}>\n        <DateCalendar />\n      </div>\n\n      {isMobile && addProduct ? <ProductForm  /> : <ProductForm display={'none'} />}\n      <ProductsList />\n      {isMobile && (\n        <Button\n        onClick={()=>{setAddProduct(true)}}\n        margin={'60px auto 0'}\n        >\n          <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n        </Button>\n      )}\n    </div>\n  );\n}\n"],"names":["Btn","styled","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","DateCalendar","useState","Date","value","setValue","openCalendar","setOpenCalendar","Div","DatePickerWrapperStyles","createGlobalStyle","inputProps","className","dateFormat","timeFormat","closeOnSelect","open","onChange","newValue","onClick","DivStyles","rows","name","weight","calorie","ProductsList","map","row","color","useStyles","makeStyles","theme","root","fontFamily","fontWeight","fontSize","border","textAlign","padding","inputRoot","minWidth","ProductForm","styles","FormikWrapperStyles","isMobile","useMediaQuery","query","classes","initialValues","product","onSubmit","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","Autocomplete","disablePortal","id","options","top100Films","sx","borderBottom","renderInput","params","TextField","label","year","DiaryPage","addProduct","setAddProduct"],"sourceRoot":""}