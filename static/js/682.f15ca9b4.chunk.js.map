{"version":3,"file":"static/js/682.f15ca9b4.chunk.js","mappings":"4NAIaA,EAAsBC,EAAAA,GAAAA,IAAH,imBASDC,EAUAC,G,SCnBhB,SAASC,EAAT,GAA+B,IAAXC,EAAU,EAAVA,SACnC,OAAO,SAACL,EAAD,UACIK,M,iZCHEC,EAAUL,EAAAA,GAAAA,QAAH,mQAePM,EAAQN,EAAAA,GAAAA,GAAH,wPAcLO,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,kNAYTS,EAAgBT,EAAAA,GAAAA,IAAH,mKAUbU,EAAoBV,EAAAA,GAAAA,IAAH,uEAKjBW,EAAuBX,EAAAA,GAAAA,IAAH,oEAKpBY,EAAQZ,EAAAA,GAAAA,MAAH,sXAqBLa,EAAQb,EAAAA,GAAAA,MAAH,qSAUdY,GAOSE,EAAQd,EAAAA,GAAAA,IAAH,+EAMLe,EAAiBf,EAAAA,GAAAA,IAAH,kOAYdgB,EAAShB,EAAAA,GAAAA,OAAH,omBA+BNiB,EAAejB,EAAAA,GAAAA,IAAH,yJAWZkB,EAAQlB,EAAAA,GAAAA,IAAH,yC,sOC/JVmB,EACNC,EAAAA,EAAAA,eADsBC,EACtBD,EAAAA,EAAAA,aADoCE,EACpCF,EAAAA,EAAAA,iBADsDG,EACtDH,EAAAA,EAAAA,gBAEII,EAAuBxB,EAAAA,GAAAA,IAAH,2QAiBpByB,EAASzB,EAAAA,GAAAA,GAAH,qXAkBNa,EAAQb,EAAAA,GAAAA,MAAH,oNACAsB,GAULV,EAAQZ,EAAAA,GAAAA,MAAH,mtBAGkBuB,EAOjBD,EAOED,EACiBA,EAelBR,EAAqCA,GAQ5CL,EAAOR,EAAAA,GAAAA,KAAH,2NAWJ0B,EAAiB1B,EAAAA,GAAAA,IAAH,2TAMTsB,GAULK,EAA0B3B,EAAAA,GAAAA,IAAH,2IAQvB4B,EAAiB5B,EAAAA,GAAAA,MAAH,oMAOTsB,GAILO,EAAoB7B,EAAAA,GAAAA,KAAH,sLAMPmB,EACMI,GAIhBO,EAAO9B,EAAAA,GAAAA,KAAH,2DACEsB,GAINS,GAAoB/B,EAAAA,GAAAA,MAAH,ujBASD6B,EAIPC,EAAeT,EAEdQ,EAYER,GAKZW,GAAehC,EAAAA,GAAAA,IAAH,sBAEZiC,GAAqBjC,EAAAA,GAAAA,IAAH,sBAElBkC,GAAelC,EAAAA,GAAAA,IAAH,gGAOZmC,GAAMnC,EAAAA,GAAAA,OAAH,odAOaqB,G,uDCzMde,GACNhB,EAAAA,EAAAA,gBADuBD,GACvBC,EAAAA,EAAAA,eADuCiB,GACvCjB,EAAAA,EAAAA,kBAD0DkB,GAC1DlB,EAAAA,EAAAA,YAEWmB,GAAavC,EAAAA,GAAAA,IAAH,gJAOPoC,IAGHI,GAAexC,EAAAA,GAAAA,IAAH,0UASTmB,GACLkB,IAOEI,GAAUzC,EAAAA,GAAAA,IAAH,mVAKHsC,GAKND,IAMEK,IAAmB1C,EAAAA,EAAAA,IAAO2C,GAAAA,IAAP3C,CAAH,oO,UC7CvB4C,GAAYC,SAASC,cAAc,eAE5BC,GAAQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAW7C,EAAe,EAAfA,SAOzC8C,GAAmBC,EAAAA,EAAAA,cACvB,SAAAC,GACiB,WAAXA,EAAEC,MACJL,MAGJ,CAACA,IASH,OANAM,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWN,GAE5B,kBAAMK,OAAOE,oBAAoB,UAAWP,MAClD,CAACA,KAEGQ,EAAAA,GAAAA,eACL,iCACE,UAACnB,GAAD,CAAYoB,QAvBG,SAAAP,GACbA,EAAEQ,SAAWR,EAAES,eACjBb,KAqBA,UACE,UAACR,GAAD,CAAcS,UAAWA,EAAzB,SAAqC7C,QAGzCwC,K,WC/BJ,GAFsB,CAAEkB,YAFJ,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,W,sBCMxCC,GAAOlE,EAAAA,GAAAA,GAAH,gIAOJmE,GAAUnE,EAAAA,GAAAA,EAAH,yTAcPoE,GAAcpE,EAAAA,GAAAA,GAAH,qOAaXqE,GAAOrE,EAAAA,GAAAA,KAAH,8MAWJsE,GAAgBtE,EAAAA,GAAAA,GAAH,uaAqBbuE,GAAQvE,EAAAA,GAAAA,EAAH,uTAyCX,GAvB0C,WACxC,OAAkCwE,EAAAA,GAAAA,IAAYC,GAAAA,aAAtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAGnB,OADAC,QAAQC,IAAIF,IAEV,WAAC,MAAD,YACE,UAACL,GAAD,0VAGA,WAACH,GAAD,WACGW,KAAKC,MAAML,IACZ,UAACL,GAAD,4CAEF,UAACE,GAAD,oMACA,UAACH,GAAD,UACGO,EAAWK,KAAI,SAAAC,GACd,OAAO,UAACf,GAAD,UAAsBe,EAAQC,MAAMC,KAAzBC,EAAAA,GAAAA,eC7FfC,GAAe,SAAC,GAA8B,EAA5BC,QAA6B,IAApBtC,EAAmB,EAAnBA,aAChCuC,GAAWC,EAAAA,GAAAA,MAEjB,OACE,6BACE,WAAC/C,GAAD,YAGE,UAAC,GAAD,KACA,UAACR,GAAD,WACE,UAACE,GAAD,CAAKsD,SAAU,OAAQ9B,QAAS,kBAAM4B,EAAS,YAA/C,yGAKJ,UAAC7C,GAAD,CACE,aAAW,cACXiB,QAAS,WACPX,GAAa,SAAA0C,GAAI,OAAKA,YCL1BC,GAAmBC,GAAAA,KAAaC,MAAM,CAC1CC,OAAQF,GAAAA,GAAW,UAChBG,IAAI,IAAK,sHACTC,IAAI,IAAK,4HACTC,SAAS,2IACZC,IAAKN,GAAAA,KACFG,IAAI,GAAI,2HACRC,IAAI,IAAK,mIACTC,SAAS,2IACZE,cAAeP,GAAAA,KACZQ,SACCR,GAAAA,GAAQ,iBACR,gNAEDS,KAAK,YAAa,yGAAyB,SAAUC,GACpD,OAAOA,EAAQ,MAEhBN,IAAI,IAAK,gHACTC,SAAS,2IACZM,cAAeX,GAAAA,KACZG,IAAI,GAAI,yGACRC,IAAI,IAAK,gHACTC,SAAS,2IACZO,UAAWZ,GAAAA,KAAaK,aAmI1B,GAhI8B,SAAAQ,GAC5B,IAAQxD,EAA4BwD,EAA5BxD,UAAWD,EAAiByD,EAAjBzD,aACbiB,GAAWO,EAAAA,GAAAA,IAAYC,GAAAA,aACvBiC,GAAWC,EAAAA,GAAAA,MAEjB,OACE,WAAC3E,GAAD,YACE,UAACP,EAAD,4QACA,UAAC,KAAD,CACEmF,cAAe,CACbd,OAAQ,GACRI,IAAK,GACLC,cAAe,GACfI,cAAe,GACfC,UAAW,KAEbK,iBAAkBlB,GAClBmB,SAAU,SAACC,EAAQC,GACjBN,EAASO,GAAAA,EAAAA,KAAmBF,IAC5B/D,GAAa,GACbkE,YAAU,iBAAC,8EACTC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCC,EAAQM,eAAc,GACtBN,EAAQO,YAHC,2CAIR,MAhBP,SAmBG,SAAAd,GACC,IAAQM,EAAuCN,EAAvCM,OAAQS,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAGxBC,EAAW,CACf,CACEC,KAAM,SACNC,KAAM,SACNC,MAAO,kCACPvB,MAPkDS,EAA9CjB,QASN,CACE6B,KAAM,MACNC,KAAM,SACNC,MAAO,sBACPvB,MAbkDS,EAAtCb,KAed,CACEyB,KAAM,gBACNC,KAAM,SACNC,MAAO,uEACPvB,MAnBkDS,EAAjCZ,eAqBnB,CACEwB,KAAM,gBACNC,KAAM,SACNC,MAAO,iEACPvB,MAzBkDS,EAAlBR,gBAoCpC,OACE,mCACE,WAAC/F,EAAD,CAAMsH,GAAG,iBAAiBhB,SAAUU,EAApC,UACGE,EAAS1C,KAAI,YAAmC,IAAhC2C,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOvB,EAAY,EAAZA,MAClC,OACE,WAAC9E,EAAD,YACE,UAACZ,EAAD,CACEkH,GAAIH,EACJA,KAAMA,EACNC,KAAMA,EACNG,SAAUN,EACVnB,MAAOA,EACP0B,YAAY,OAGd,UAACnH,EAAD,CAAOoH,QAASJ,EAAhB,SAAwBA,KACxB,UAAC,KAAD,CACEK,UAAU,uBACVC,UAAWjG,GACXyF,KAAMA,MAdiBA,OAoB/B,UAACjG,EAAD,8EACA,UAACC,EAAD,UAjCgB,CACpB,CAAEmG,GAAI,aAAcxB,MAAO,KAC3B,CAAEwB,GAAI,aAAcxB,MAAO,KAC3B,CAAEwB,GAAI,aAAcxB,MAAO,KAC3B,CAAEwB,GAAI,aAAcxB,MAAO,MA8BNtB,KAAI,YAAoB,IAAjB8C,EAAgB,EAAhBA,GAAIxB,EAAY,EAAZA,MACxB,OACE,WAAC1E,EAAD,YACE,UAACG,GAAD,CACEqG,QAASrB,EAAOP,YAAcF,EAC9BsB,KAAK,QACLE,GAAIA,EACJH,KAAK,YACLI,SAAUN,EACVnB,MAAOA,KAET,UAACzE,EAAD,KACA,UAACC,EAAD,UAAOwE,MAVYwB,YAgB7B,UAAC7F,GAAD,WACE,UAACE,GAAD,CAAKkG,KAAK,iBAAiBT,KAAK,SAAhC,2GAQT3E,GAAagB,IACZ,UAAClB,GAAD,CAAOC,aAAcA,EAArB,UACE,UAACqC,GAAD,CAAcrC,aAAcA,UC3KzBsF,GAAyBtI,EAAAA,GAAAA,IAAH,ugBCCpB,SAASuI,GAAkB9B,GACxC,OACE,UAAC6B,GAAD,WACE,UAAC,IAAD,UAA2B7B,MCClB,SAAS+B,KACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOxF,EAAP,KAAkBD,EAAlB,KAUA,OALEH,SAAS6F,KAAKC,MAAMC,SADlB3F,EAC6B,SAEA,SAI/B,UAAC9C,EAAA,EAAD,WACE,UAAC,GAAD,CACE0I,UAZY,WAChB7F,GAAa,SAAA0C,GAAI,OAAKA,MAYlBzC,UAAWA,EACXD,aAAcA,Q","sources":["components/Container/Container.styled.js","components/Container/Container.js","components/Forms/LoginForm/LoginForm.styled.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","redux/calculatorSlice/calculatorSelectors.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieFormModalContent.js","components/Modal/ModalContent/ModalContent.jsx","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.styled.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.js","pages/MainPage/MainPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport BgTablet from '../../images/BackgroundTablet.webp';\nimport BgDesk from '../../images/BackgroundDesc.webp';\n\nexport const ResponsiveContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    // height: 100vh;\n    padding: 20px 20px;\n    // background-image: url(${BgTablet});\n\n    background-position: bottom left;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    // height: 100vh;\n    // width: 1280px;\n    // background-image: url(${BgDesk});\n    background-position: bottom right;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveContainer } from './Container.styled';\n\nexport default function Container({children}){\nreturn <ResponsiveContainer>\n          {children}\n      </ResponsiveContainer>\n}\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\n\n","import styled from 'styled-components';\nimport { Form } from \"formik\";\n\nexport const Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    padding: 16px;\n    margin: 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n  color: #FC842D;\n  margin-top: 40px;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    text-align: left;\n    margin-top: 160px;\n  }\n`;\n\nexport const FormLogin = styled(Form)`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 400px;\n  }\n`;\n\nexport const WrapperInputs = styled.div`\n  width: 280px;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const WrapperInputEmail = styled.div`\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nexport const WrapperInputPassword = styled.div`\n  margin-bottom: 0;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  color: #9B9FAA;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: none;\n  border-bottom: 1px solid #ececec;\n  background: transparent;\n  display: block;\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  color: #9B9FAA;\n  position: absolute;\n  transition: 0.2s ease all;\n  top: -10px;\n  background-color: transparent;\n\n  ${Input}:focus ~ & {\n    top: -18px;\n    font-size: 12px;\n    color: #9B9FAA;\n  }\n`;\n\nexport const Error = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 6px;\n`;\n\nexport const WrapperButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n  }\n`;\n\nexport const Button = styled.button`\n  height: 44px;\n  width: 182px;\n  font-weight: 700;\n  font-size: 14px;\n  background: #FC842D;\n  color: #FFFFFF;\n  border: 2px solid #FC842D;\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  padding-top: 13px;\n  padding-bottom: 13px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 32px;\n    margin-top: 0;\n  }\n\n  &:hover,\n  &:focus{\n    background: #FFFFFF;\n    border: 2px solid #FC842D;\n    border-radius: 30px;\n    color: #FC842D;\n    cursor: pointer;\n}\n`;\n\nexport const WrapperImage = styled.div`\n  position: absolute;\n  top: 5%;\n  right: 1%;\n\n  @media screen and (min-width: 768px) {\n    top: 9%;\n    right: 15%;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 20px;\n`;\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\n\nconst { mainBackground, activeButton, placeholderColor, formBorderColor } =\n  layoutStyles;\n\nconst PlaceholderContainer = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n\n  @media screen and (min-device-width: 768px) {\n    margin-right: 30px;\n\n    &:nth-child(4) {\n      margin-right: 0px;\n    }\n\n    &:nth-child(3) {\n      margin-bottom: 0px;\n    }\n  }\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  color: #212121;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 768px) {\n    font-size: 18px;\n    line-height: 1.44;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-device-width: 768px) {\n    font-size: 34px;\n    line-height: 41px;\n    margin-bottom: 80px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${placeholderColor};\n  font-family: 'Raleway', sans-serif;\n  pointer-events: none;\n  position: absolute;\n  transition: all 200ms;\n  top: 0px;\n  left: 0px;\n  background-color: transparent;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid ${formBorderColor};\n  padding:0px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n   color: ${placeholderColor};\n  padding-bottom:8px;\n  width:240px;\n  background:transparent;\n  }\n  \n    &:hover,&:focus  {  \n    color:  ${activeButton};\n    border-bottom: 1px solid ${activeButton};\n  }\n  \n \n\n&::-webkit-outer-spin-button,\n&::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n \n[type=number] {\n  -moz-appearance:textfield;\n}\n\n &:focus + ${Label},&:not(:placeholder-shown) + ${Label} { top: -22px;\n    left: -10px;\n    font-size: 11px;\n    background:transparent;\n    padding:  10px;}\n\n`;\n\nconst Form = styled.form`\n  margin-bottom: 40px;\n  @media screen and (min-device-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    height: 160px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst BloodTypeTitle = styled.div`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  padding-bottom: 10px;\n\n  max-width: 240px;\n  @media screen and (min-device-width: 768px) {\n    border-bottom: 1px solid #ccc;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BloodTypeRadioContainer = styled.div`\n  width: 240px;\n  min-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst BloodTypeLabel = styled.label`\n  position: relative;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  margin-left: 20px;\n`;\n\nconst BloodTypeCheckBox = styled.span`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  top: 0;\n  background: ${mainBackground};\n  border: 1px solid ${formBorderColor};\n  margin-left: -20px;\n`;\n\nconst Text = styled.span`\n   color: ${placeholderColor};\n  margin-left 8px;\n`;\n\nconst BloodTypeRadioBtn = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  z-index: -1;\n\n  &:hover,&:focus ~ ${BloodTypeCheckBox} {\n    cursor:pointer;\n    background: fff;}\n\n&: checked ~ ${Text}{color: ${activeButton};}\n\n &: checked ~ ${BloodTypeCheckBox}  {\n    background: fff;\n    &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    content: '';\n    border-radius: 50%;\n    border-color: transparent;\n    width: 10px;\n    height: 10px;\n    background: ${activeButton};}\n\n    \n`;\n\nconst StileWrapper = styled.div``;\n\nconst StileButtonWrapper = styled.div``;\n\nconst ErrorWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  font-size: 11px;\n  color: red;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: none;\n  background-color: ${activeButton};\n  width: 210px;\n  min-height: 43px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  color: #fff;\n\n  @media screen and (min-device-width: 768px) {\n    margin: 0;\n  }\n  @media screen and (min-device-width: 1280px) {\n    margin-right: 0;\n  }\n`;\n\nexport {\n  Form,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  StileWrapper,\n  Text,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n  Btn,\n};\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { MdClose } from 'react-icons/md';\n\nconst { transparentGrey, mainBackground, modalWrapperColor, verdanaBold } =\n  layoutStyles;\n\nexport const Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: scroll;\n  background: ${transparentGrey};\n`;\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 672px;\n  min-height: 573px;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  background: ${mainBackground};\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    top: 65%;\n    left: 50%;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: ${verdanaBold};\n  padding: 64px 81px 81px 81px;\n  text-align: center;\n  font-family: 'Verdana';\n  margin: auto;\n  color: ${modalWrapperColor};\n  @media screen and (max-width: 767px) {\n    padding: 40px 20px 120px 20px;\n  }\n`;\n\nexport const CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  z-index: 10;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;","import React, { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Background, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ setShowModal, showModal, children }) => {\n  const closeModal = e => {\n    if (e.target === e.currentTurget) {\n      setShowModal();\n    }\n  };\n\n  const closeOnEscapeKey = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        setShowModal();\n      }\n    },\n    [setShowModal]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeOnEscapeKey);\n\n    return () => window.removeEventListener('keydown', closeOnEscapeKey);\n  }, [closeOnEscapeKey]);\n\n  return createPortal(\n    <>\n      <Background onClick={closeModal}>\n        <ModalWrapper showModal={showModal}>{children}</ModalWrapper>\n      </Background>\n    </>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n\n","const getUserData = state => state.calculator.userData;\n\nconst calcSelectors = { getUserData };\n\nexport default calcSelectors;\n","import { useSelector } from 'react-redux';\nimport calcSelectors from '../../../redux/calculatorSlice/calculatorSelectors';\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\nimport { Wrapper } from '../LoginForm/LoginForm.styled';\n\nconst Item = styled.li`\n  margin-bottom: 20px;\n  @media only screen and {\n  }\n  @media only screen and (min-width: ) {\n  }\n`;\nconst Calorie = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 58px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  padding-bottom: 45px;\n  color: #264061;\n  min-width: 280px;\n  border-bottom: 1px solid #e0e0e0;\n  margin-bottom: 25px;\n`;\nconst ProductList = styled.ol`\n  text-align: left;\n  padding-left: 22px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n`;\n\nconst Call = styled.span`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: #264061;\n`;\n\nconst CalorieHeader = styled.h2`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: #212121;\n  margin-bottom: 60px;\n  max-width: 280px;\n  text-align: center;\n\n  @media screen and (min-device-width: 768px) {\n    margin-bottom: 45px;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 26px;\n    line-height: 32px;\n    max-width: 370px;\n  }\n`;\n\nconst Foods = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n\n  letter-spacing: 0.04em;\n\n  color: #212121;\n  max-width: 330px;\n  margin-bottom: 25px;\n\n  @media screen and (min-device-width: 768px) {\n    text-align: left;\n  }\n`;\n\nconst CalculatorСalorieFormModalContent = () => {\n  const { dailyRate, notRecFood } = useSelector(calcSelectors.getUserData);\n\n  console.log(notRecFood);\n  return (\n    <Wrapper>\n      <CalorieHeader>\n        Ваша рекомендована добова норма споживання калорій становить\n      </CalorieHeader>\n      <Calorie>\n        {Math.round(dailyRate)}\n        <Call> ккал</Call>\n      </Calorie>\n      <Foods>Продукти, які ви не повинні вживати</Foods>\n      <ProductList>\n        {notRecFood.map(product => {\n          return <Item key={uuidv4()}>{product.title.ua}</Item>;\n        })}\n      </ProductList>\n    </Wrapper>\n  );\n};\n\nexport default CalculatorСalorieFormModalContent;\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import Button from '../../button/Button.styled';\n// import SummaryForDay from '../../SummaryForDay/SummaryForDay';\n// import Title from '../../DailyCalorieIntake/Title.styled';\nimport { Content, CloseModalButton } from '../Modal.styled';\nimport {\n  Btn,\n  StileButtonWrapper,\n} from '../../Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled';\n\nimport CalculatorСalorieFormModalContent from '../../Forms/CalculatorСalorieForm/CalculatorСalorieFormModalContent';\n\nexport const ModalContent = ({ onClose, setShowModal }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div>\n      <Content>\n        {/* <h2>Ваша рекомендована добова норма споживання калорій становить</h2> */}\n        {/* <SummaryForDay /> */}\n        <CalculatorСalorieFormModalContent />\n        <StileButtonWrapper>\n          <Btn centered={'true'} onClick={() => navigate('/signup')}>\n            Почніть худнути\n          </Btn>\n        </StileButtonWrapper>\n      </Content>\n      <CloseModalButton\n        aria-label=\"Close modal\"\n        onClick={() => {\n          setShowModal(prev => !prev);\n        }}\n      />\n    </div>\n  );\n};\n\nModalContent.propTypes = {\n  onClose: PropTypes.func,\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Btn,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  Text,\n  StileWrapper,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n} from './CalculatorСalorieForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport calcOperation from '../../../redux/calculatorSlice/calcOperation';\nimport { Modal } from '../../Modal';\nimport { ModalContent } from '../../Modal/ModalContent';\nimport React from 'react';\nimport calcSelectors from '../../../redux/calculatorSlice/calculatorSelectors';\n\nconst CalculatorSchema = Yup.object().shape({\n  height: Yup.number('number')\n    .min(100, 'Мінімальний зріст 100 см')\n    .max(250, 'Максимальний зріст 250 см')\n    .required('Обов`язково до заповнення'),\n  age: Yup.number()\n    .min(18, 'Мінімальний вік 18 років')\n    .max(100, 'Максимальний вік 100 років ')\n    .required('Обов`язково до заповнення'),\n  currentWeight: Yup.number()\n    .moreThan(\n      Yup.ref('desiredWeight'),\n      'Поточна вага має бути більшою за бажану'\n    )\n    .test('min-width', 'Мінімальна вага 30 кг', function (value) {\n      return value > 30;\n    })\n    .max(120, 'Максимальна вага 120 кг')\n    .required('Обов`язково до заповнення'),\n  desiredWeight: Yup.number()\n    .min(20, 'Мінімальна вага 20 кг')\n    .max(500, 'Максимальна вага 500 кг')\n    .required('Обов`язково до заповнення'),\n  bloodType: Yup.string().required(),\n});\n\nconst CalculatorСalorieForm = props => {\n  const { showModal, setShowModal } = props;\n  const userData = useSelector(calcSelectors.getUserData);\n  const dispatch = useDispatch();\n\n  return (\n    <StileWrapper>\n      <Header>Розрахуйте свою денну норму калорій прямо зараз</Header>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '1',\n        }}\n        validationSchema={CalculatorSchema}\n        onSubmit={(values, actions) => {\n          dispatch(calcOperation.calc(values));\n          setShowModal(true);\n          setTimeout(async () => {\n            alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n            actions.resetForm();\n          }, 1000);\n        }}\n      >\n        {props => {\n          const { values, handleSubmit, handleChange } = props;\n          const { height, age, currentWeight, desiredWeight } = values;\n\n          const settings = [\n            {\n              name: 'height',\n              type: 'number',\n              label: 'Зріст*',\n              value: height,\n            },\n            {\n              name: 'age',\n              type: 'number',\n              label: 'Вік*',\n              value: age,\n            },\n            {\n              name: 'currentWeight',\n              type: 'number',\n              label: 'Поточна вага*',\n              value: currentWeight,\n            },\n            {\n              name: 'desiredWeight',\n              type: 'number',\n              label: 'Бажана вага*',\n              value: desiredWeight,\n            },\n          ];\n\n          const bloodSettings = [\n            { id: 'bloodType1', value: '1' },\n            { id: 'bloodType2', value: '2' },\n            { id: 'bloodType3', value: '3' },\n            { id: 'bloodType4', value: '4' },\n          ];\n\n          return (\n            <>\n              <Form id=\"calculatorForm\" onSubmit={handleSubmit}>\n                {settings.map(({ name, type, label, value }) => {\n                  return (\n                    <PlaceholderContainer key={name}>\n                      <Input\n                        id={name}\n                        name={name}\n                        type={type}\n                        onChange={handleChange}\n                        value={value}\n                        placeholder=\" \"\n                      />\n\n                      <Label htmlFor={label}>{label}</Label>\n                      <ErrorMessage\n                        className=\"menu navigation-menu\"\n                        component={ErrorWrapper}\n                        name={name}\n                      />\n                    </PlaceholderContainer>\n                  );\n                })}\n\n                <BloodTypeTitle>Група крові*</BloodTypeTitle>\n                <BloodTypeRadioContainer>\n                  {bloodSettings.map(({ id, value }) => {\n                    return (\n                      <BloodTypeLabel key={id}>\n                        <BloodTypeRadioBtn\n                          checked={values.bloodType === value}\n                          type=\"radio\"\n                          id={id}\n                          name=\"bloodType\"\n                          onChange={handleChange}\n                          value={value}\n                        />\n                        <BloodTypeCheckBox></BloodTypeCheckBox>\n                        <Text>{value}</Text>\n                      </BloodTypeLabel>\n                    );\n                  })}\n                </BloodTypeRadioContainer>\n              </Form>\n              <StileButtonWrapper>\n                <Btn form=\"calculatorForm\" type=\"submit\">\n                  Почніть худнути\n                </Btn>\n              </StileButtonWrapper>\n            </>\n          );\n        }}\n      </Formik>\n      {showModal && userData && (\n        <Modal setShowModal={setShowModal}>\n          <ModalContent setShowModal={setShowModal}></ModalContent>\n        </Modal>\n      )}\n    </StileWrapper>\n  );\n};\n\nexport default CalculatorСalorieForm;\n","import styled from 'styled-components';\n\nexport const CalculatorWrapperStyle = styled.div`{\n  \n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 767px) {\n  display: flex;\n  justify-content: center;\n    max-width: 320px;\n    padding-top:32px;\n  \n  }\n\n  @media screen and (min-device-width: 768px)  {\n     max-width:510px;\n    padding-top: 100px;\n      margin-left: 0px;\n  }\n\n   @media screen and (min-device-width: 1280px) {\n     padding-top: 140px;\n     max-width:510px;\n     margin-left: 0px;\n\n  }\n`;\n","import CalculatorСalorieForm from '../CalculatorСalorieForm';\nimport { CalculatorWrapperStyle } from './CalculatorWrapper.styled';\n\nexport default function CalculatorWrapper(props) {\n  return (\n    <CalculatorWrapperStyle>\n      <CalculatorСalorieForm {...props} />\n    </CalculatorWrapperStyle>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../../components/Container';\nimport CalculatorFormWrapper from '../../components/Forms/CalculatorFormWrapper';\n// import { Modal } from '../../components/Modal';\n// import { ModalContent } from '../../components/Modal/ModalContent';\n\nexport default function MainPage() {\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n  if (showModal) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'unset';\n  }\n\n  return (\n    <Container>\n      <CalculatorFormWrapper\n        openModal={openModal}\n        showModal={showModal}\n        setShowModal={setShowModal}\n      />\n      {/* <Modal showModal={showModal} setShowModal={setShowModal}>\n        <ModalContent setShowModal={setShowModal} /> */}\n      {/* </Modal> */}\n    </Container>\n  );\n}\n\nMainPage.propTypes = {\n  showModal: PropTypes.bool,\n  toggleModal: PropTypes.func,\n};\n"],"names":["ResponsiveContainer","styled","BgTablet","BgDesk","Container","children","Wrapper","Title","FormLogin","Form","WrapperInputs","WrapperInputEmail","WrapperInputPassword","Input","Label","Error","WrapperButtons","Button","WrapperImage","Image","mainBackground","layoutStyles","activeButton","placeholderColor","formBorderColor","PlaceholderContainer","Header","BloodTypeTitle","BloodTypeRadioContainer","BloodTypeLabel","BloodTypeCheckBox","Text","BloodTypeRadioBtn","StileWrapper","StileButtonWrapper","ErrorWrapper","Btn","transparentGrey","modalWrapperColor","verdanaBold","Background","ModalWrapper","Content","CloseModalButton","MdClose","modalRoot","document","querySelector","Modal","setShowModal","showModal","closeOnEscapeKey","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTurget","getUserData","state","calculator","userData","Item","Calorie","ProductList","Call","CalorieHeader","Foods","useSelector","calcSelectors","dailyRate","notRecFood","console","log","Math","round","map","product","title","ua","uuidv4","ModalContent","onClose","navigate","useNavigate","centered","prev","CalculatorSchema","Yup","shape","height","min","max","required","age","currentWeight","moreThan","test","value","desiredWeight","bloodType","props","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","calcOperation","setTimeout","alert","JSON","stringify","setSubmitting","resetForm","handleSubmit","handleChange","settings","name","type","label","id","onChange","placeholder","htmlFor","className","component","checked","form","CalculatorWrapperStyle","CalculatorWrapper","MainPage","useState","body","style","overflow","openModal"],"sourceRoot":""}