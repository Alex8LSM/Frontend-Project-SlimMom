{"version":3,"file":"static/js/373.1128a2f3.chunk.js","mappings":"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","sources":["components/SummaryForDay/SummaryforDay.styled.js","components/SummaryForDay/SummaryForDay.jsx","components/button/Button.styled.js","components/DateCalendar/DateCalendar.styled.js","stlyles/toastStyled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm/ProductForm.styled.js","components/Forms/ProductForm/ProductForm.jsx","pages/DiaryPage/DiaryPage.js","pages/DiaryPage/DiaryPage.styled.js","redux/dairy/dairySelector.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\n@media screen and (max-width: 767px) {\nmargin-top: 100px;\npadding-bottom: 85px;\n}\n\n@media screen and (min-width: 768px) and (max-width: 1279px) {\nflex-direction: row;\njustify-content: flex-start;\nmargin-top: 130px;\npadding-left: 15px;\npadding-bottom: 85px;\n}\n\n@media screen and (min-width: 1280px) {\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 288px;\nmargin-right: 135px;\n}\n`;\n\nexport const SummaryWrap = styled.div`\nwidth: 288px;\n\n@media screen and (max-width: 767px) {\n  margin-bottom: 40px;\n  }\n\n @media screen and (min-width: 768px) and (max-width: 1279px) {\n  margin-right: 80px;\n  }\n\n @media screen and (min-width: 1280px) {\n  margin-bottom: 60px;\n  } \n`;\n\nexport const FoodRecWrap = styled.div`\nwidth: 288px;\n\n`;\n\nexport const List = styled.ul`\n`;\n\nexport const Item = styled.li`\ndisplay:flex;\njustify-content: space-between;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\n\nfont-size: 14px;\n`;\n\nexport const Text = styled.p`\nfont-size: 14px;\nfont-weight: 400;\nline-height: 2;\n\ncolor: #9B9FAA;\n`;","import { format } from 'date-fns';\nimport { useSelector } from 'react-redux';\nimport { getSummary, getDate, getNotRecFood } from 'redux/dairy/dairySelector';\nimport { getDaily } from 'redux/dairy/dairySelector';\nimport {\n  Wrapper,\n  SummaryWrap,\n  FoodRecWrap,\n  List,\n  Item,\n  Title,\n  Text,\n} from './SummaryforDay.styled';\n\nexport default function SummaryForDay() {\n\n  const date = new Date();\n  const reduxDate = useSelector(getDate);\n\n  const dailyRate = useSelector(getDaily);\n  console.log(dailyRate);\n\n  const summary = useSelector(getSummary);\n  const notRecFoodArr = useSelector(getNotRecFood);\n\n  return (\n    <Wrapper>\n      <SummaryWrap>\n        <Title>Загалом за {reduxDate === '' ? format(date, 'dd/MM/yyyy') : format(new Date(reduxDate), 'dd/MM/yyyy')}</Title>\n        <List>\n        <Item>\n          <Text>Залишилось</Text><Text>{summary.left ? summary.left : '000'} ккал</Text>\n        </Item>\n        <Item>\n          <Text>Спожито</Text><Text>{summary.consumed ? summary.consumed : '000'} ккал</Text>\n        </Item>\n        <Item>\n          <Text>Добова норма</Text><Text>{dailyRate ? dailyRate : '000'} ккал</Text>\n          </Item>\n        <Item>\n          <Text>n% від норми</Text><Text>{summary.nOfNorm ? summary.nOfNorm : '000'} %</Text>\n        </Item>\n        </List>\n      </SummaryWrap>\n\n      <FoodRecWrap>\n        <Title>Не рекомендована їжа</Title>\n        <Text>{\n          notRecFoodArr.length === 0\n            ? 'Ваша діета буде відображатись тут'\n            :\n            notRecFoodArr.map(product=>product.title.ua).join(', ').toLowerCase() }</Text>\n      </FoodRecWrap>\n\n    </Wrapper>\n  )\n};\n\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  box-shadow:  ${props => props.background || `0px 4px 10px ${layoutStyles.activeButton}`};\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { layoutStyles } from '../../stlyles/layoutStyles';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n\n const Div = styled.div`\n display: flex;\n margin: 0;\n padding: 0;\n`;\n\nconst DatePickerWrapperStyles = createGlobalStyle`\n    .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n  font-family: ${layoutStyles.verdana};\n  letter-spacing: 0.04em;\n    table{\n  font-size: 16px;\n  font-weight: 400;\n}\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n\n`;\n\nexport {Div, DatePickerWrapperStyles}","const toastStyles = {\n    position: 'top-center',\n    theme: 'light',\n    autoClose: 1200,\n    hideProgressBar: false,\n    closeOnClick: false,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  }\n\n export {toastStyles}","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport { Div, DatePickerWrapperStyles } from './DateCalendar.styled';\nimport { toastStyles } from '../../stlyles/toastStyled';\nimport { toast } from 'react-toastify';\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nimport { fetchDairy } from '../../redux/dairy/dairyOperations';\nimport { addDate } from '../../redux/dairy/dairyReducer';\nimport authSelector from '../../redux/auth/selectors';\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(moment(new Date()));\n  const [openCalendar, setOpenCalendar] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const dateConnect = new Date(useSelector(authSelector.getStartDate));\n\n  const maxDate = moment(new Date());\n  const minDate = moment(dateConnect);\n\n  function dateFormat(date) {\n    return `${date.format('YYYY.MM.DD')}Z`;\n  }\n  useEffect(() => {\n    dispatch(addDate(dateFormat(value)));\n    dispatch(fetchDairy(dateFormat(value)));\n  }, [value, dispatch]);\n\n  const setDate = date => {\n    dispatch(addDate(date));\n  };\n\n  fetchDairy(dateFormat(value));\n\n  const onChange = newValue => {\n    setOpenCalendar(false);\n    if (!moment(newValue, 'DD.MM.YYYY', true).isValid()) {\n      newValue = maxDate;\n      return;\n    }\n    if (newValue > maxDate) {\n      newValue = maxDate;\n      toast.warning(`Вибрана дата ще не настала!`, toastStyles);\n      return;\n    }\n    if (newValue < minDate) {\n      newValue = minDate;\n      toast.warning(`На вибрану дату у додатку не має історії!`, toastStyles);\n      return;\n    }\n    setValue(newValue);\n    setDate(dateFormat(newValue));\n  };\n  return (\n    <Div>\n      <Datetime\n        className=\"form-control\"\n        dateFormat=\"DD.MM.YYYY\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={onChange}\n      />\n\n      <Button\n        onClick={() => {\n          if (openCalendar) {\n            return setOpenCalendar(false);\n          }\n          setOpenCalendar(true);\n        }}\n        background={layoutStyles.mainBackground}\n        boxShadow={'none'}\n        width={'23px'}\n        height={'23px'}\n        margin={'0'}\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n      <DatePickerWrapperStyles />\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.info{\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  padding: 60px;\n  line-height: 2em;\n  letter-spacing: 0.04em;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  line-height: 1.22;\n  letter-spacing: 0.04em;\n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Button from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport { DivStyles } from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { getEatProducts, getDate } from '../../redux/dairy/dairySelector';\nimport { toastStyles } from '../../stlyles/toastStyled';\nimport { removeProduct } from '../../redux/dairy/dairyOperations';\n\nexport default function ProductsList() {\n  const dispatch = useDispatch();\n\n  const deleteProduct = (date, id) => {\n    dispatch(removeProduct({ dataFormat: date, id: id }));\n  };\n  const date = useSelector(getDate);\n  const products = useSelector(getEatProducts);\n\n  return (\n    <>\n      <div className=\"control\">\n        {products.length === 0 ? (\n          <p className=\"info\">\n            Тут буде список продуктів та напоїв, що з'їли та випили за день.{' '}\n          </p>\n        ) : (\n          <table className=\"table\">\n            <tbody>\n              {products.map(row => {\n                return (\n                  <tr key={row.id}>\n                    <td className=\"td-name\">{row.title.ua}</td>\n                    <td className=\"td-weight\">{row.weight} гр</td>\n                    <td className=\"td-calories\">\n                      {Math.round(row.calories)} ккал\n                    </td>\n                    <td>\n                      <Button\n                        background={layoutStyles.mainBackground}\n                        width=\"28px\"\n                        height=\"28px\"\n                        backgroundHover={layoutStyles.formBorderColor}\n                        onClick={() => {\n                          deleteProduct(date, row.id);\n                          toast.success(`Видалено!`, toastStyles); // не обрабатывается ошибка\n                        }}\n                      >\n                        <FiX\n                          width=\"14\"\n                          height=\"14\"\n                          color={layoutStyles.placeholderColor}\n                        />\n                      </Button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <DivStyles />\n    </>\n  );\n}\n","import { layoutStyles } from '../../../stlyles/layoutStyles';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-root': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n    },\n    '& .MuiOutlinedInput-input': {\n      textAlign: 'right',\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      lineHeight: 1.22,\n      letterSpacing: '0.04em',\n      paddingRight: '2px',\n      paddingLeft: '2px',\n    },\n    '& .MuiFormLabel-colorPrimary.Mui-focused ': {\n      color: layoutStyles.activeButton,\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-input': {\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nconst DivWrapper = styled.div`\n  display: ${props => props.display};\n  position: absolute;\n  top: 0;\n  padding-top: 80px;\n  background-color: ${layoutStyles.mainBackground};\n\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    position: relative;\n    display: block;\n    padding: 0;\n  }\n`;\n\nconst FormikWrapperStyles = createGlobalStyle`\n   .ProductForm {\n    padding-top: 80px;\n    background-color: ${layoutStyles.mainBackground};\n    display: block;\n    margin: 0px;\n    outline: none;\n    padding: 0 20px;\n    height: 100vh;\n}\n.ProductName {\n  margin:  0 32px 20px 0;\n}\n.BtnName{\n  width: 176px;\n  color: ${layoutStyles.mainBackground}\n}\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n .ProductForm {\n  display: flex;\n  margin:  0 0 60px 0;\n  padding: 0;\n  outline: none;\n  width: 240px;\n  height: 100%;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin: 0 32px 0 0;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n\n`;\n\nexport { FormikWrapperStyles, useStyles, DivWrapper };\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\nimport debounce from 'lodash.debounce';\nimport { toast } from 'react-toastify';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../../redux/dairy/dairyReducer';\nimport {\n  fetchProducts,\n  addProduct,\n} from '../../../redux/dairy/dairyOperations';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\nimport { toastStyles } from '../../../stlyles/toastStyled';\nimport Button from '../../button/Button.styled';\nimport {\n  getProducts,\n  getDate,\n  getToggle,\n} from '../../../redux/dairy/dairySelector';\nimport {\n  FormikWrapperStyles,\n  useStyles,\n  DivWrapper,\n} from './ProductForm.styled';\n\n\nexport default function ProductForm() {\n  const [value, setValue] = useState('');\n  const [productId, setProductId] = useState('');\n  const [productWeight, setWeight] = useState('');\n\n  const dispatch = useDispatch();\n\n  const products = useSelector(getProducts); // список найденных продуктов\n  const date = useSelector(getDate); // форматированная дата на которую добавляем проукт\n  const toggle = useSelector(getToggle);\n\n  const findProduct = value => {\n    dispatch(fetchProducts(value));\n  };\n\n  const debouncedFindProduct = debounce(findProduct, 400);\n\n  function onSubmit(e) {\n    if (productId === '') {\n      return toast.warning('Виберіть продукт!', toastStyles);\n    }\n    if (productWeight <= 0) {\n      return toast.warning('Вкажіть вагу продукту!', toastStyles);\n    }\n\n    if (productId !== '' && productWeight >= 1) {\n      dispatch(addProduct({ date, productId, productWeight }));\n      toast.success(`З'їдено!`, toastStyles);\n      setProductId('');\n      setWeight('');\n      setValue('');\n    }\n  }\n\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <DivWrapper display={isMobile && toggle ? 'block' : 'none'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        onSubmit={(values, { resetForm, setSubmitting }) => {\n          onSubmit();\n          if (isMobile && productId !== '' && productWeight >= 1) {\n            dispatch(changeToggle(false));\n          }\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form className={'ProductForm'}>\n            <div className={'ProductName'}>\n              <Autocomplete\n                // forcePopupIcon={true}\n                isOptionEqualToValue={(option, value) =>\n                  option.iso === value.iso\n                }\n                autoSelect\n                selectOnFocus\n                id=\"product\"\n                name=\"product\"\n                options={products}\n                value={value}\n                noOptionsText={'Такий продукт не знайдено'} // якщо продукту не має в списку можливих значень\n                classes={classes}\n                onChange={(e, v) => {\n                  if (v && v.id) {\n                    setProductId(v.id);\n                    setValue(v);\n                  }\n                }}\n                sx={{\n                  borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                  width: isMobile ? '280px' : '240px',\n                }}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    // required\n                    onChange={e => {\n                      if (e.currentTarget.value !== '')\n                        debouncedFindProduct(e.currentTarget.value);\n                    }}\n                    label=\"Введіть назву продукту\"\n                  />\n                )}\n              />\n            </div>\n            <div className={'ProductWeight'}>\n              <TextField\n                // required\n                fullWidth\n                id=\"weight\"\n                name=\"weight\"\n                type=\"number\"\n                value={productWeight}\n                onInput={e => {\n                  e.target.value = Math.max(0, parseInt(e.target.value))\n                    .toString()\n                    .slice(0, 4);\n                }}\n                sx={{\n                  borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                  width: isMobile ? '280px' : '150px',\n                  paddingRight: '50px',\n                  margin: isMobile && '0 0 60px 0',\n                }}\n                onChange={e => {\n                  if (e.currentTarget.value > 0) {\n                    setWeight(e.currentTarget.value);\n                  }\n                }}\n                classes={classes}\n                label=\"Вага продукта\"\n              />\n            </div>\n            {isSubmitting && <LinearProgress />}\n            <Button\n              margin=\"0 auto 0\"\n              type=\"submit\"\n              borderRadius={isMobile && '30px'}\n              disabled={isSubmitting}\n            >\n              {isMobile ? (\n                <p className={'BtnName'}>Додати</p>\n              ) : (\n                <ImPlus\n                  width=\"20\"\n                  height=\"20\"\n                  fill={layoutStyles.mainBackground}\n                />\n              )}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <FormikWrapperStyles />\n    </DivWrapper>\n  );\n}\n","import { useMediaQuery } from 'react-responsive';\nimport {  useDispatch } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\nimport { changeToggle } from '../../redux/dairy/dairyReducer';\n\nimport { DivDate, DivWrapper, ContentWrap } from './DiaryPage.styled';\nimport SummaryForDay from 'components/SummaryForDay';\n\nexport default function DiaryPage() {\n  const dispatch = useDispatch();\n\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <motion.div>\n      <ContentWrap>\n         <DivWrapper>\n        <DivDate>\n          <DateCalendar />\n        </DivDate>\n        <ProductForm />\n        <ProductsList />\n\n        {isMobile && (\n          <Button\n            onClick={() => {\n              dispatch(changeToggle(true));\n            }}\n            margin={'60px auto 0'}\n          >\n            <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n          </Button>\n        )}\n      </DivWrapper>\n      <SummaryForDay/>\n     </ContentWrap>\n    </motion.div>\n  );\n}\n","import { layoutStyles } from '../../stlyles/layoutStyles';\nimport styled from 'styled-components';\n\nconst ContentWrap = styled.div`\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  display: flex;\n  justify-content: space-between;\n  align-items:flex-start;\n  padding-top: 150px;\n  }\n`\n\nconst DivWrapper = styled.div`\n  position: relative;\n  display: block;\n  padding-top: 40px;\n  margin: 0 auto 0;\n  max-width: 320px;\n\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    max-width: 748px;\n    margin: 0;\n    padding-top: 100px;\n  }\n  @media screen and (min-width: ${layoutStyles.deskTop}) {\n    max-width: 748px;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst DivDate = styled.div`\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport { DivDate, DivWrapper, ContentWrap };\n","export const getProducts = (state) => state.dairy.productList; \nexport const getDate = (state) => state.dairy.dateFind;\nexport const getToggle = (state) => state.dairy.toggle;\nexport const getSummary = (state) => state.dairy.summary;\nexport const getNotRecFood = (state) => state.calculator.userData.notRecFood;\nexport const getDaily = (state) => state.calculator.userData.dailyRate;\nexport const getEatProducts = (state) => state.dairy.products; \n\n"],"names":["Wrapper","styled","SummaryWrap","FoodRecWrap","List","Item","Title","Text","SummaryForDay","date","Date","reduxDate","useSelector","getDate","dailyRate","getDaily","console","log","summary","getSummary","notRecFoodArr","getNotRecFood","format","left","consumed","nOfNorm","length","map","product","title","ua","join","toLowerCase","Btn","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","Div","DatePickerWrapperStyles","createGlobalStyle","toastStyles","position","theme","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","DateCalendar","useState","moment","value","setValue","openCalendar","setOpenCalendar","dispatch","useDispatch","dateConnect","authSelector","maxDate","minDate","dateFormat","useEffect","addDate","fetchDairy","className","timeFormat","closeOnSelect","open","onChange","newValue","isValid","toast","onClick","boxShadow","DivStyles","ProductsList","products","getEatProducts","row","weight","Math","round","calories","id","removeProduct","dataFormat","deleteProduct","color","useStyles","makeStyles","root","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","border","textAlign","padding","paddingRight","paddingLeft","inputRoot","minWidth","DivWrapper","FormikWrapperStyles","ProductForm","productId","setProductId","productWeight","setWeight","getProducts","toggle","getToggle","debouncedFindProduct","debounce","fetchProducts","isMobile","useMediaQuery","query","classes","initialValues","onSubmit","values","resetForm","setSubmitting","addProduct","changeToggle","isSubmitting","Autocomplete","isOptionEqualToValue","option","iso","autoSelect","selectOnFocus","name","options","noOptionsText","e","v","sx","borderBottom","renderInput","params","TextField","fullWidth","currentTarget","label","type","onInput","target","max","parseInt","toString","slice","LinearProgress","disabled","DiaryPage","motion","ContentWrap","DivDate","state","dairy","productList","dateFind","calculator","userData","notRecFood"],"sourceRoot":""}