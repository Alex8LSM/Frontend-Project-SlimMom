{"version":3,"file":"static/js/69.47207199.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/DateCalendar/DateCalendar.jsx","components/ProductsList/Div.styled.js","redux/dairy/dairySelector.js","components/ProductsList/ProductsList.jsx","components/Forms/ProductForm.jsx","webpack://Frontend-Project-SlimMom/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nconst Btn = styled.button`\n  cursor: ${({ cursor }) => cursor || 'pointer'};\n  display: ${props => props.display || 'flex'};\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.borderRadius || '50%'};\n  border: none;\n  background-color: ${props => props.background || layoutStyles.activeButton};\n  min-width: ${props => props.width || '48px'};\n  max-height: 48px;\n  min-height: ${props => props.height || '48px'};\n  margin: ${props => props.margin || 'auto'};\n  padding: 0;\n  :hover{\n    border-radius: 50%;\n    background-color: ${props => props.backgroundHover || 'none'};\n    color: ${props => props.fill || 'none'};\n  }\n`;\nconst Button = props => {\n  return <Btn {...props} />;\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport Datetime from 'react-datetime';\nimport Button from '../button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport 'react-datetime/css/react-datetime.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { RiCalendar2Fill } from 'react-icons/ri';\n\nimport { fetchDairy } from '../../redux/dairy/dairyOperations';\nimport { addDate } from '../../redux/dairy/dairyReducer';\n\nexport default function DateCalendar() {\n  const [value, setValue] = useState(moment(new Date()));\n  const [openCalendar, setOpenCalendar] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchDairy(dateFormat(value)));\n  }, [value, dispatch]);\n\n  const setDate = date => {\n    dispatch(addDate(date));\n  };\n\n  function dateFormat(date) {\n    return `${date.format('YYYY.MM.DD')}Z`;\n  }\n\n  setDate(dateFormat(value));\n  fetchDairy(dateFormat(value));\n\n  const Div = styled.div`\n    display: flex;\n    margin: 0;\n    padding: 0;\n  `;\n\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .form-control {\n  border: none;\n  font-size: 18px;\n  width: 116px;\n  font-weight: 700;\n  line-height: 1.22;\n  padding: 0;\n}\n.rdtPicker td.rdtActive,\n.rdtPicker td.rdtActive:hover {\n  background-color: ${layoutStyles.activeButton} !important;\n}\n.rdtPicker td.rdtToday:before {\n  border-bottom: 7px solid ${layoutStyles.activeButton};\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .form-control {\n    font-size: 34px;\n    width: 219px;\n  }\n}\n\n`;\n\n  return (\n    <Div>\n      <Datetime\n        inputProps={{ className: 'form-control' }}\n        dateFormat=\"DD.MM.yyyy\"\n        value={value}\n        timeFormat={false}\n        closeOnSelect\n        open={openCalendar}\n        onChange={newValue => {\n          setValue(newValue);\n          setOpenCalendar(false);\n          setDate(dateFormat(newValue));\n          // getDairy(dateFormat(newValue))\n        }}\n      />\n      <DatePickerWrapperStyles />\n      <Button\n        onClick={() => {\n          setOpenCalendar(true);\n        }}\n        background={layoutStyles.mainBackground}\n        width={'23px'}\n        height={'23px'}\n        margin={'0'}\n      >\n        <RiCalendar2Fill\n          width=\"23\"\n          height=\"23\"\n          fill={layoutStyles.placeholderColor}\n        />\n      </Button>\n    </Div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\n\nexport const DivStyles = createGlobalStyle`\n::-webkit-scrollbar {\n  width: 6px;\n}\n \n::-webkit-scrollbar-track {\n  background-color: ${layoutStyles.scrollbarTrack};\n}\n \n::-webkit-scrollbar-thumb {\n  background-color: ${layoutStyles.scrollbarTumb};\n}\n.control {\n  border: none;\n  padding: 0;\n  max-height: 252px;\n  margin-left: -8px;\n}\n.table{\n  min-width: 230px;\n  border-collapse: separate ;\n  border-spacing: 8px 0px ;\n  font-family: ${layoutStyles.verdana};\n  font-weight: 700;\n  font-size: 14px; \n  max-height: 252px;\n  display: inline-block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.td-name{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 130px;\n}\n.td-weight{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 49px;\n  text-align: right;\n}\n.td-calories{\n  border-bottom: 1px solid ${layoutStyles.formBorderColor};\n  padding: 20px 0 8px;\n  width: 59px;\n  text-align: right;\n}\n@media screen and (min-width: ${layoutStyles.tablet}) {\n  .control {\n  margin-left: -22px;\n}\n  .table{\n  border-spacing: 22px 0px;\n  min-width: 610px;\n  }\n  .td-name{\n  width: 240px;\n}\n.td-weight{\n  width: 106px;\n}\n.td-calories{\n  width: 106px;\n}\n}\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .control {\n  margin-left: -48px;\n}\n  .table{\n  border-spacing: 48px 0px;\n  min-width: 731px;\n  }\n}\n`;\n","export const getDairy = (state) => state.dairy.daySummary; \nexport const getProducts = (state) => state.dairy.productList; \nexport const getDate = (state) => state.dairy.dateFind;\nexport const getSummary = (state) => state.dairy.summary;\nexport const getNotRecFood = (state) => state.dairy.notRecFood;\nexport const getEatProducts = (state) => state.dairy.products; \n","import { useSelector, useDispatch } from 'react-redux';\nimport Button from '../button/Button.styled';\nimport { FiX } from 'react-icons/fi';\nimport { DivStyles } from './Div.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { getEatProducts, getDate } from '../../redux/dairy/dairySelector';\n\nimport { removeProduct } from '../../redux/dairy/dairyOperations';\n\nexport default function ProductsList() {\n  const dispatch = useDispatch();\n\n  const deleteProduct = (date, id) => {\n    dispatch(removeProduct({ dataFormat: date, id: id }));\n  };\n  const date = useSelector(getDate);\n  const products = useSelector(getEatProducts);\n\n  return (\n    <>\n      <div className=\"control\">\n        <table className=\"table\">\n          <tbody>\n            {products.map(row => {\n              return (\n                <tr key={row.id}>\n                  <td className=\"td-name\">{row.title.ua}</td>\n                  <td className=\"td-weight\">{row.weight} гр</td>\n                  <td className=\"td-calories\">\n                    {Math.round(row.calories)} ккал\n                  </td>\n                  <td>\n                    <Button\n                      background={layoutStyles.mainBackground}\n                      width=\"28px\"\n                      height=\"28px\"\n                      backgroundHover={layoutStyles.formBorderColor}\n                      onClick={() => {\n                        console.log(date);\n                        console.log(row.id);\n                        deleteProduct(date, row.id);\n                      }}\n                    >\n                      <FiX\n                        width=\"14\"\n                        height=\"14\"\n                        color={layoutStyles.placeholderColor}\n                      />\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <DivStyles />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { useMediaQuery } from 'react-responsive';\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { createGlobalStyle } from 'styled-components';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport Button from '../button/Button.styled';\nimport { ImPlus } from 'react-icons/im';\n\nimport {\n  fetchProducts,\n  addProduct,\n  fetchDairy,\n} from '../../redux/dairy/dairyOperations';\nimport { getProducts, getDate } from '../../redux/dairy/dairySelector';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiInputLabel-root': {\n      color: layoutStyles.placeholderColor,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      textAlign: 'end',\n      padding: 0,\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n    },\n    '& .MuiOutlinedInput-input': {\n      textAlign: 'right',\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '13px',\n      paddingRight: '2px',\n      paddingLeft: '2px',\n    },\n  },\n  inputRoot: {\n    '& .MuiAutocomplete-input': {\n      fontFamily: layoutStyles.verdana,\n      fontWeight: 700,\n      fontSize: '14px',\n    },\n    '& .MuiAutocomplete-endAdornment': {\n      display: 'none',\n    },\n    '@media screen and (max-width: 768px': {\n      minWidth: '280px',\n    },\n  },\n}));\n\nexport default function ProductForm(styles) {\n  const [productId, setProductId] = useState('');\n  const [productWeight, setWeight] = useState('');\n\n  const dispatch = useDispatch();\n\n  const getDairy = date => {\n    dispatch(fetchDairy(date));\n  };\n\n  const products = useSelector(getProducts); // список найденных продуктов\n  const date = useSelector(getDate); // форматированная дата на которую добавляем проукт\n\n  const findProduct = name => {\n    dispatch(fetchProducts(name));\n  };\n\n  function onSubmit() {\n    dispatch(addProduct({ date, productId, productWeight }));\n    setProductId('');\n    setWeight('');\n    getDairy(date);\n  }\n\n  const FormikWrapperStyles = createGlobalStyle`\n  .wrapper{\n    position: absolute;\n    top: 0;\n    ${styles};\n    /* top: -170%; */\n\n  }\n   .ProductForm {\n    padding-top: 80px;\n    background-color: white;\n  display: block;\n  margin: 0px;\n  outline: none;\n  width: 100%;\n  height: 100vh;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  @media screen and (min-width: ${layoutStyles.tablet}) {\n    .wrapper{\n    position: relative;\n    display: block;\n  }\n .ProductForm {\n  display: flex;\n  margin: 0px;\n  outline: none;\n  width: 240px;\n  height: 100%;\n}\n.ProductWeight {\n  margin-right: 87px;\n}\n.ProductName {\n  margin-right: 32px;\n}\n  }\n@media screen and (min-width: ${layoutStyles.deskTop}) {\n  .ProductName {\n    margin-right: 48px;\n  }\n  .ProductWeight {\n    margin-right: 60px;\n  }\n}\n\n`;\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className={'wrapper'}>\n      <Formik\n        initialValues={{ product: '', weight: '' }}\n        onSubmit={(values, actions) => {\n          setTimeout(() => {\n            actions.setSubmitting(false);\n          }, 1000);\n        }}\n\n        // onSubmit={onSubmit}\n      >\n        <Form className={'ProductForm'}>\n          <div className={'ProductName'}>\n            <Autocomplete\n              disablePortal\n              autoSelect\n              selectOnFocus\n              id=\"product\"\n              options={products}\n              noOptionsText={'Такий продукт не знайдено'} // якщо продукту не має в списку можливих значень\n              classes={classes}\n              onChange={(_, v) => {\n                setProductId(v.id);\n              }}\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '240px',\n              }}\n              renderInput={params => (\n                <TextField\n                  fullWidth\n                  required\n                  onChange={e => findProduct(e.currentTarget.value)}\n                  {...params}\n                  label=\"Введіть назву продукту\"\n                />\n              )}\n            />\n          </div>\n          <div className={'ProductWeight'}>\n            <TextField\n              required\n              fullWidth\n              id=\"weight\"\n              type=\"number\"\n              step=\"1\"\n              sx={{\n                borderBottom: `1px solid ${layoutStyles.formBorderColor}`,\n                minWidth: '110px',\n                paddingRight: '50px',\n                margin: '0 32px 60px 0',\n              }}\n              onChange={e => {\n                setWeight(e.currentTarget.value);\n              }}\n              classes={classes}\n              label=\"Вага продукта\"\n            />\n          </div>\n          <Button\n            margin=\"0 auto 0\"\n            type=\"submit\"\n            onClick={() => {\n              onSubmit();\n            }}\n          >\n            {isMobile ? (\n              <p weight=\"176px\">Додати</p>\n            ) : (\n              <ImPlus\n                width=\"20\"\n                height=\"20\"\n                fill={layoutStyles.mainBackground}\n              />\n            )}\n          </Button>\n        </Form>\n      </Formik>\n\n      <FormikWrapperStyles />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"DiaryPage_Wrapper__4CjeL\",\"WrapperDate\":\"DiaryPage_WrapperDate__S3ccC\"};","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { motion } from 'framer-motion';\nimport DateCalendar from '../../components/DateCalendar/DateCalendar';\nimport ProductsList from '../../components/ProductsList/ProductsList';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport Button from '../../components/button/Button.styled';\nimport { layoutStyles } from '../../stlyles/layoutStyles';\nimport { ImPlus } from 'react-icons/im';\n\nimport styles from './DiaryPage.module.css';\n\nexport default function DiaryPage() {\n  const [addProduct, setAddProduct] = useState(false);\n  const isMobile = useMediaQuery({\n    query: `(max-width: ${layoutStyles.tablet})`,\n  });\n\n  return (\n    <motion.div>\n      <div className={styles.WrapperDate}>\n        <DateCalendar />\n      </div>\n\n      {isMobile && addProduct ? <ProductForm  /> : <ProductForm display={'none'} />}\n      <ProductsList />\n      {isMobile && (\n        <Button\n        onClick={()=>{setAddProduct(true)}}\n        margin={'60px auto 0'}\n        >\n          <ImPlus width=\"20\" height=\"20\" fill={layoutStyles.mainBackground} />\n        </Button>\n      )}\n    </motion.div>\n  );\n}\n"],"names":["Btn","styled","cursor","props","display","borderRadius","background","layoutStyles","width","height","margin","backgroundHover","fill","DateCalendar","useState","moment","Date","value","setValue","openCalendar","setOpenCalendar","dispatch","useDispatch","useEffect","fetchDairy","dateFormat","setDate","date","addDate","format","Div","DatePickerWrapperStyles","createGlobalStyle","inputProps","className","timeFormat","closeOnSelect","open","onChange","newValue","onClick","DivStyles","getProducts","state","dairy","productList","getDate","dateFind","getEatProducts","products","ProductsList","useSelector","map","row","title","ua","weight","Math","round","calories","console","log","id","removeProduct","dataFormat","deleteProduct","color","useStyles","makeStyles","theme","root","fontFamily","fontWeight","fontSize","border","textAlign","padding","paddingRight","paddingLeft","inputRoot","minWidth","ProductForm","styles","productId","setProductId","productWeight","setWeight","onSubmit","addProduct","getDairy","FormikWrapperStyles","isMobile","useMediaQuery","query","classes","initialValues","product","values","actions","setTimeout","setSubmitting","Autocomplete","disablePortal","autoSelect","selectOnFocus","options","noOptionsText","_","v","sx","borderBottom","renderInput","params","TextField","fullWidth","required","e","name","currentTarget","fetchProducts","label","type","step","DiaryPage","setAddProduct","motion"],"sourceRoot":""}