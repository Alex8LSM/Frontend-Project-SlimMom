{"version":3,"file":"static/js/498.fba857d9.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.styled.js","components/Forms/CalculatorСalorieForm/CalculatorСalorieForm.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.styled.js","components/Forms/CalculatorFormWrapper/CalculatorWrapper.js","pages/MainPage/MainPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport BgTablet from '../../images/BackgroundTablet.webp';\nimport BgDesk from '../../images/BackgroundDesc.webp';\n\nexport const ResponsiveContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    height: 100vh;\n    padding: 20px 20px;\n    // background-image: url(${BgTablet});\n\n    background-position: bottom left;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 100vh;\n    width: 1280px;\n    // background-image: url(${BgDesk});\n    background-position: bottom right;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveContainer } from './Container.styled';\n\nexport default function Container({children}){\nreturn <ResponsiveContainer>\n          {children}\n      </ResponsiveContainer>\n}\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\n\n","import styled from 'styled-components';\nimport { layoutStyles } from '../../../stlyles/layoutStyles';\n\nconst { mainBackground, activeButton, placeholderColor, formBorderColor } =\n  layoutStyles;\n\nconst PlaceholderContainer = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n\n  @media screen and (min-device-width: 768px) {\n    margin-right: 30px;\n\n    &:nth-child(4) {\n      margin-right: 0px;\n    }\n\n    &:nth-child(3) {\n      margin-bottom: 0px;\n    }\n  }\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  color: #212121;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 768px) {\n    font-size: 18px;\n    line-height: 1.44;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-device-width: 768px) {\n    font-size: 34px;\n    line-height: 41px;\n    margin-bottom: 80px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${placeholderColor};\n  font-family: 'Raleway', sans-serif;\n  pointer-events: none;\n  position: absolute;\n  transition: all 200ms;\n  top: 0px;\n  left: 0px;\n  background-color: transparent;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid ${formBorderColor};\n  padding:0px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n   color: ${placeholderColor};\n  padding-bottom:8px;\n  width:240px;\n  background:transparent;\n  }\n  \n    &:hover,&:focus  {  \n    color:  ${activeButton};\n    border-bottom: 1px solid ${activeButton};\n  }\n  \n \n\n&::-webkit-outer-spin-button,\n&::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n \n[type=number] {\n  -moz-appearance:textfield;\n}\n\n &:focus + ${Label},&:not(:placeholder-shown) + ${Label} { top: -22px;\n    left: -10px;\n    font-size: 11px;\n    background:transparent;\n    padding:  10px;}\n\n`;\n\nconst Form = styled.form`\n  margin-bottom: 40px;\n  @media screen and (min-device-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    height: 160px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst BloodTypeTitle = styled.div`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  padding-bottom: 10px;\n\n  max-width: 240px;\n  @media screen and (min-device-width: 768px) {\n    border-bottom: 1px solid #ccc;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BloodTypeRadioContainer = styled.div`\n  width: 240px;\n  min-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst BloodTypeLabel = styled.label`\n  position: relative;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${placeholderColor};\n  margin-left: 20px;\n`;\n\nconst BloodTypeCheckBox = styled.span`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  top: 0;\n  background: ${mainBackground};\n  border: 1px solid ${formBorderColor};\n  margin-left: -20px;\n`;\n\nconst Text = styled.span`\n   color: ${placeholderColor};\n  margin-left 8px;\n`;\n\nconst BloodTypeRadioBtn = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  z-index: -1;\n\n  &:hover,&:focus ~ ${BloodTypeCheckBox} {\n    cursor:pointer;\n    background: fff;}\n\n&: checked ~ ${Text}{color: ${activeButton};}\n\n &: checked ~ ${BloodTypeCheckBox}  {\n    background: fff;\n    &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    content: '';\n    border-radius: 50%;\n    border-color: transparent;\n    width: 10px;\n    height: 10px;\n    background: ${activeButton};}\n\n    \n`;\n\nconst StileWrapper = styled.div``;\n\nconst StileButtonWrapper = styled.div``;\n\nconst ErrorWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  font-size: 11px;\n  color: red;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: none;\n  background-color: ${activeButton};\n  width: 210px;\n  min-height: 43px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  color: #fff;\n\n  @media screen and (min-device-width: 768px) {\n    margin: 0;\n  }\n  @media screen and (min-device-width: 1280px) {\n    margin-right: 0;\n  }\n`;\n\nexport {\n  Form,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  StileWrapper,\n  Text,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n  Btn,\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Btn,\n  Header,\n  Input,\n  BloodTypeRadioBtn,\n  BloodTypeCheckBox,\n  Label,\n  BloodTypeLabel,\n  BloodTypeTitle,\n  BloodTypeRadioContainer,\n  Text,\n  StileWrapper,\n  PlaceholderContainer,\n  ErrorWrapper,\n  StileButtonWrapper,\n} from './CalculatorСalorieForm.styled';\n\nimport * as Yup from 'yup';\n\nconst CalculatorSchema = Yup.object().shape({\n  height: Yup.number('number')\n    .min(100, 'Мінімальний зріст 100 см')\n    .max(250, 'Максимальний зріст 250 см')\n    .required('Обов`язково до заповнення'),\n  age: Yup.number()\n    .min(18, 'Мінімальний вік 18 років')\n    .max(100, 'Максимальний вік 100 років ')\n    .required('Обов`язково до заповнення'),\n  currentWeight: Yup.number()\n    .moreThan(\n      Yup.ref('desiredWeight'),\n      'Поточна вага має бути більшою за бажану'\n    )\n    // .min(30, 'Мінімальна вага 30 кг')\n    .max(120, 'Максимальна вага 120 кг')\n    .required('Обов`язково до заповнення'),\n  desiredWeight: Yup.number()\n    .min(20, 'Мінімальна вага 20 кг')\n    .max(500, 'Максимальна вага 500 кг')\n    .required('Обов`язково до заповнення'),\n  bloodType: Yup.string().required(),\n});\n\nconst CalculatorСalorieForm = () => {\n  return (\n    <StileWrapper>\n      <Header>Розрахуйте свою денну норму калорій прямо зараз</Header>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '1',\n        }}\n        validationSchema={CalculatorSchema}\n        onSubmit={(values, actions) => {\n          setTimeout(async () => {\n            alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n            // actions.resetForm();\n          }, 1000);\n        }}\n      >\n        {props => {\n          const { values, handleSubmit, handleChange } = props;\n          const { height, age, currentWeight, desiredWeight } = values;\n\n          const settings = [\n            {\n              name: 'height',\n              type: 'number',\n              label: 'Зріст*',\n              value: height,\n            },\n            {\n              name: 'age',\n              type: 'number',\n              label: 'Вік*',\n              value: age,\n            },\n            {\n              name: 'currentWeight',\n              type: 'number',\n              label: 'Поточна вага*',\n              value: currentWeight,\n            },\n            {\n              name: 'desiredWeight',\n              type: 'number',\n              label: 'Бажана вага*',\n              value: desiredWeight,\n            },\n          ];\n\n          const bloodSettings = [\n            { id: 'bloodType1', value: '1' },\n            { id: 'bloodType2', value: '2' },\n            { id: 'bloodType3', value: '3' },\n            { id: 'bloodType4', value: '4' },\n          ];\n\n          return (\n            <>\n              <Form id=\"calculatorForm\" onSubmit={handleSubmit}>\n                {settings.map(({ name, type, label, value }) => {\n                  return (\n                    <PlaceholderContainer key={name}>\n                      <Input\n                        id={name}\n                        name={name}\n                        type={type}\n                        onChange={handleChange}\n                        value={value}\n                        placeholder=\" \"\n                      />\n\n                      <Label htmlFor={label}>{label}</Label>\n                      <ErrorMessage\n                        className=\"menu navigation-menu\"\n                        component={ErrorWrapper}\n                        name={name}\n                      />\n                    </PlaceholderContainer>\n                  );\n                })}\n\n                <BloodTypeTitle>Група крові*</BloodTypeTitle>\n                <BloodTypeRadioContainer>\n                  {bloodSettings.map(({ id, value }) => {\n                    return (\n                      <BloodTypeLabel key={id}>\n                        <BloodTypeRadioBtn\n                          checked={values.bloodType === value}\n                          type=\"radio\"\n                          id={id}\n                          name=\"bloodType\"\n                          onChange={handleChange}\n                          value={value}\n                        />\n                        <BloodTypeCheckBox></BloodTypeCheckBox>\n                        <Text>{value}</Text>\n                      </BloodTypeLabel>\n                    );\n                  })}\n                </BloodTypeRadioContainer>\n              </Form>\n              <StileButtonWrapper>\n                <Btn form=\"calculatorForm\" type=\"submit\">\n                  Почніть худнути\n                </Btn>\n              </StileButtonWrapper>\n            </>\n          );\n        }}\n      </Formik>\n    </StileWrapper>\n  );\n};\n\nexport default CalculatorСalorieForm;\n","import styled from 'styled-components';\n\nexport const CalculatorWrapperStyle = styled.div`{\n  \n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 767px) {\n  display: flex;\n  justify-content: center;\n    max-width: 320px;\n    padding-top:32px;\n  \n  }\n\n  @media screen and (min-device-width: 768px)  {\n     max-width:510px;\n    padding-top: 100px;\n      margin-left: 0px;\n  }\n\n   @media screen and (min-device-width: 1280px) {\n     padding-top: 140px;\n     max-width:510px;\n     margin-left: 0px;\n\n  }\n`;\n","import CalculatorСalorieForm from '../CalculatorСalorieForm';\nimport { CalculatorWrapperStyle } from './CalculatorWrapper.styled';\n\nexport default function CalculatorWrapper() {\n  return (\n    <CalculatorWrapperStyle>\n      <CalculatorСalorieForm />\n    </CalculatorWrapperStyle>\n  );\n}\n","\nimport Container from '../../components/Container';\nimport CalculatorFormWrapper from '../../components/Forms/CalculatorFormWrapper';\n\nexport default function MainPage() {\n  return (\n    <Container>\n      <CalculatorFormWrapper />\n    </Container>\n  );\n}\n"],"names":["ResponsiveContainer","styled","BgTablet","BgDesk","Container","children","mainBackground","layoutStyles","activeButton","placeholderColor","formBorderColor","PlaceholderContainer","Header","Label","Input","Form","BloodTypeTitle","BloodTypeRadioContainer","BloodTypeLabel","BloodTypeCheckBox","Text","BloodTypeRadioBtn","StileWrapper","StileButtonWrapper","ErrorWrapper","Btn","CalculatorSchema","Yup","shape","height","min","max","required","age","currentWeight","moreThan","desiredWeight","bloodType","initialValues","validationSchema","onSubmit","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","props","handleSubmit","handleChange","settings","name","type","label","value","id","map","onChange","placeholder","htmlFor","className","component","checked","form","CalculatorWrapperStyle","CalculatorWrapper","MainPage"],"sourceRoot":""}